{"remainingRequest":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/hrslab/Documents/GitHub/prjdoc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/hrslab/Documents/GitHub/prjdoc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/hrslab/Documents/GitHub/prjdoc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/hrslab/Documents/GitHub/prjdoc/docs/scrum.md?vue&type=template&id=797f2905&","dependencies":[{"path":"/Users/hrslab/Documents/GitHub/prjdoc/docs/scrum.md","mtime":1625636249083},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/cache-loader/dist/cjs.js","mtime":1625499997609},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1625500029488},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/cache-loader/dist/cjs.js","mtime":1625499997609},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/vue-loader/lib/index.js","mtime":1625500029488},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/@vuepress/markdown-loader/index.js","mtime":1625499990443}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoic2NydW0tZ3VpZGUifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzY3J1bS1ndWlkZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTQ1JVTSBHVUlERSAiKSxfYygnUmVhZGluZ1RpbWUnKV0sMSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6ImRlZmluaXppb25lLWRpLXNjcnVtIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZGVmaW5pemlvbmUtZGktc2NydW0ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgRGVmaW5pemlvbmUgZGkgU2NydW0iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTY3J1bSDDqCBVbiBmcmFtZXdvcmsgY2hlIGNvbnNlbnRlIGFsbGUgcGVyc29uZSBkaSByaXNvbHZlcmUgcHJvYmxlbWkgY29tcGxlc3NpIGRpIHRpcG8gYWRhdHRpdm8gZSwgYWwgdGVtcG8gc3Rlc3NvLCBkaSBjcmVhcmUgZSByaWxhc2NpYXJlIHByb2RvdHRpIGluIG1vZG8gZWZmaWNhY2UgZSBjcmVhdGl2byBkZWwgcGnDuSBhbHRvIHZhbG9yZSBwb3NzaWJpbGUuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiU2NydW0gw6g6IildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIuKclO+4jyBMZWdnZXJvIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIuKclO+4jyBTZW1wbGljZSBkYSBjb21wcmVuZGVyZSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCLinJTvuI8gRGlmZmljaWxlIGRhIHBhZHJvbmVnZ2lhcmUiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlNjcnVtIMOoIHVuIGZyYW1ld29yayBkaSBwcm9jZXNzbyB1dGlsaXp6YXRvIGRhaSBwcmltaSBhbm5pIG5vdmFudGEgcGVyIGdlc3RpcmUgaWwgbGF2b3JvIHN1IHByb2RvdHRpIGNvbXBsZXNzaS4gU2NydW0gbm9uIMOoIHVuIHByb2Nlc3NvLCB1bmEgdGVjbmljYSBvIHVuIG1ldG9kbyBkZWZpbml0aXZvLiBQaXV0dG9zdG8sIGVzc28gw6ggdW4gZnJhbWV3b3JrIGFsbOKAmWludGVybm8gZGVsIHF1YWxlIMOoIHBvc3NpYmlsZSB1dGlsaXp6YXJlIHZhcmkgcHJvY2Vzc2kgZSB0ZWNuaWNoZS4gU2NydW0gcmVuZGUgY2hpYXJhIGzigJllZmZpY2FjaWEgcmVsYXRpdmEgZGVsbGEgcHJvcHJpYSBnZXN0aW9uZSBkaSBwcm9kb3R0byBlIGRlbGxlIHByb3ByaWUgdGVjbmljaGUgZGkgbGF2b3JvIGNvc8OsIGRhIHBvdGVyIG1pZ2xpb3JhcmUgY29udGludWFtZW50ZSBpbCBwcm9kb3R0bywgaWwgdGVhbSBlIGwnYW1iaWVudGUgZGkgbGF2b3JvLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklsIGZyYW1ld29yayBTY3J1bSDDqCBjb3N0aXR1aXRvIGRhZ2xpIFNjcnVtIFRlYW0gZSBkYWkgcnVvbGksIGV2ZW50aSwgYXJ0ZWZhdHRpIGUgcmVnb2xlIGEgZXNzaSBhc3NvY2lhdGkuIE9nbmkgcGFydGUgZGVsIGZyYW1ld29yayBzZXJ2ZSBhIHVubyBzcGVjaWZpY28gc2NvcG8gZWQgw6ggZXNzZW56aWFsZSBwZXIgaWwgc3VjY2Vzc28gZSBs4oCZdXRpbGl6em8gZGkgU2NydW0uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiTGUgcmVnb2xlIGRpIFNjcnVtIGxlZ2FubyBpbnNpZW1lIGkgcnVvbGksIGdsaSBldmVudGksIGdsaSBhcnRlZmF0dGkgZ292ZXJuYW5kbyBsZSByZWxhemlvbmkgZSBsZSBpbnRlcmF6aW9uaSB0cmEgZXNzaS4gTGUgcmVnb2xlIHNvbm8gZGVzY3JpdHRlIGluIHR1dHRvIGlsIGNvcnBvIGRpIHF1ZXN0byBkb2N1bWVudG8uIFRhdHRpY2hlIHNwZWNpZmljaGUgcGVyIGzigJl1dGlsaXp6byBkZWwgZnJhbWV3b3JrIFNjcnVtIHNvbm8gdmFyaWUgZSBkZXNjcml0dGUgYWx0cm92ZS4iKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJpbXBpZWdoaS1kaS1zY3J1bSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2ltcGllZ2hpLWRpLXNjcnVtIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEltcGllZ2hpIGRpIFNjcnVtIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiU2NydW0gZnUgb3JpZ2luYXJpYW1lbnRlIHN2aWx1cHBhdG8gcGVyIGdlc3RpcmUgZSBzdmlsdXBwYXJlIHByb2RvdHRpLiBBIHBhcnRpcmUgZGFpIHByaW1pIGFubmlcbmRlbCAxOTkwLCBTY3J1bSDDqCBzdGF0byBpbXBpZWdhdG8gZXN0ZW5zaXZhbWVudGUsIGluIHR1dHRvIGlsIG1vbmRvLCBwZXIiKV0pLF92bS5fdigiICIpLF9jKCdvbCcsW19jKCdsaScsW192bS5fdigicmljZXJjYXJlIGVkIGlkZW50aWZpY2FyZSB2YWxpZGkgbWVyY2F0aSwgdGVjbm9sb2dpZSBlIGZ1bnppb25hbGl0w6AgZGkgcHJvZG90dG87IildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoInN2aWx1cHBhcmUgcHJvZG90dGkgZSBtaWdsaW9yYW1lbnRpOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJyaWxhc2NpYXJlIHByb2RvdHRpIGUgbWlnbGlvcmFtZW50aSBhbmNoZSBwacO5IHZvbHRlIGFsIGdpb3JubzsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigic3ZpbHVwcGFyZSBlIHNvc3RlbmVyZSBhbWJpZW50aSBDbG91ZCAob25saW5lLCBzaWN1cmksIG9uLWRlbWFuZCkgZWQgYWx0cmkgYW1iaWVudGkgb3BlcmF6aW9uYWxpIHBlciBsJ3V0aWxpenpvIGRpIHByb2RvdHRvOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJzb3N0ZW5lcmUgZSByaW5ub3ZhcmUgcHJvZG90dGkuIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTY3J1bSDDqCBzdGF0byBpbXBpZWdhdG8gcGVyIHN2aWx1cHBhcmUgc29mdHdhcmUsIGhhcmR3YXJlLCBzb2Z0d2FyZSBlbWJlZGRlZCwgcmV0aSBkaSBmdW56aW9uaSBpbnRlcmFnZW50aSwgdmVpY29saSBhdXRvbm9taSwgbmVsbGUgc2N1b2xlLCBuZWkgZ292ZXJuaSwgbmVsIG1hcmtldGluZywgcGVyIGdlc3RpcmUgbGUgb3BlcmF6aW9uaSBuZWxsZSBvcmdhbml6emF6aW9uaSBlIHBlciBxdWFzaSB0dXR0byBxdWVsbG8gY2hlIHVzaWFtbyBuZWxsZSBub3N0cmEgdml0YSBxdW90aWRpYW5hLCBjb21lIGluZGl2aWR1aSBlIHNvY2lldMOgLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlBvaWNow6kgbGEgY29tcGxlc3NpdMOgIGRlbGxhIHRlY25vbG9naWEsIGRlbCBtZXJjYXRvLCBkZWxsJ2FtYmllbnRlIGUgZGVsbGUgbG9ybyByZWxhemlvbmkgYXVtZW50YSByYXBpZGFtZW50ZSwgbCd1dGlsaXTDoCBkaSBTY3J1bSBuZWxsJ2FmZnJvbnRhcmUgbGEgY29tcGxlc3NpdMOgIMOoIGRpbW9zdHJhdGEgcXVvdGlkaWFuYW1lbnRlLlxuU2NydW0gc2kgw6ggZGltb3N0cmF0byBwYXJ0aWNvbGFybWVudGUgZWZmaWNhY2UgbmVsIHRyYXNmZXJpbWVudG8gZGkgY29ub3NjZW56YSBpdGVyYXRpdm8gZWQgaW5jcmVtZW50YWxlLiBPZ2dpZ2lvcm5vIFNjcnVtIMOoIGFtcGlhbWVudGUgaW1waWVnYXRvIHBlciBwcm9kb3R0aSwgc2Vydml6aSwgZSBwZXIgbGEgZ2VzdGlvbmUgZGVsbCdvcmdhbml6emF6aW9uZSBtYWRyZS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMJ2Vzc2VuemEgZGkgU2NydW0gw6ggdW4gcGljY29sbyB0ZWFtIGRpIHBlcnNvbmUuIElsIHNpbmdvbG8gdGVhbSDDqCBhbHRhbWVudGUgZmxlc3NpYmlsZSBlZCBhZGF0dGl2by4gUXVlc3RpIHB1bnRpIGRpIGZvcnphIGNvbnRpbnVhbm8gYWQgYWdpcmUgc2lhIGluIHRlYW0gc2luZ29saSwgZGl2ZXJzaSwgbW9sdGVwbGljaSBlIHJldGkgZGkgdGVhbSBjaGUgc3ZpbHVwcGFubywgcmlsYXNjaWFubyBvcGVyYW5vIGUgc29zdGVuZ29ubyBpbCBsYXZvcm8gZWQgaWwgbGF2b3JvIHByb2RvdHRvIGRhIG1pZ2xpYWlhIGRpIHBlcnNvbmUuIFF1ZXN0aSB0ZWFtIGNvbGxhYm9yYW5vIGF0dHJhdmVyc28gY29tcGxlc3NlIGFyY2hpdGV0dHVyZSBkaSBzdmlsdXBwbyBlZCBhbWJpZW50aSBkaSByaWxhc2NpbyBmaW5hbGkuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiUXVhbmRvIGxlIHBhcm9sZSBcInN2aWx1cHBhcmVcIiBlIFwic3ZpbHVwcG9cIiBzb25vIHVzYXRlIG5lbGxhIEd1aWRhIGEgU2NydW0sIGVzc2Ugc2kgcmlmZXJpc2Nvbm8gYWwgbGF2b3JvIGNvbXBsZXNzbywgaW5jbHVzaSBxdWVpIHRpcGkgZGkgbGF2b3JvIHNvcHJhY2l0YXRpLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6ImxhLXRlb3JpYS1kaS1zY3J1bSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2xhLXRlb3JpYS1kaS1zY3J1bSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBMYSBUZW9yaWEgZGkgU2NydW0iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTY3J1bSBzaSBiYXNhIHN1bGxhIHRlb3JpYSBkZWwgY29udHJvbGxvIGVtcGlyaWNvIGRlaSBwcm9jZXNzaSwgbyBlbXBpcmlzbW8uIEzigJllbXBpcmlzbW8gYWZmZXJtYVxuY2hlIGxhIGNvbm9zY2VuemEgZGVyaXZhIGRhbGzigJllc3BlcmllbnphIGUgY2hlIGxlIGRlY2lzaW9uaSBzaSBiYXNhbm8gc3UgY2nDsiBjaGUgc2kgY29ub3NjZS4gU2NydW1cbnV0aWxpenphIHVuIGFwcHJvY2NpbyBpdGVyYXRpdm8gZWQgaW5jcmVtZW50YWxlIHBlciBvdHRpbWl6emFyZSBsYSBwcmV2ZWRpYmlsaXTDoCBlZCBpbCBjb250cm9sbG8gZGVsXG5yaXNjaGlvLlxuVHJlIHBpbGFzdHJpIHNvc3Rlbmdvbm8gb2duaSBpbXBsZW1lbnRhemlvbmUgZGVsIGNvbnRyb2xsbyBlbXBpcmljbyBkaSBwcm9jZXNzbyBzb25vOlxudHJhc3BhcmVuemEsIGlzcGV6aW9uZSBlIGFkYXR0YW1lbnRvLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6InRyYXNwYXJlbnphIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjdHJhc3BhcmVuemEifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgVHJhc3BhcmVuemEiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJHbGkgYXNwZXR0aSBzaWduaWZpY2F0aXZpIGRlbCBwcm9jZXNzbyBkZXZvbm8gZXNzZXJlIHZpc2liaWxpIGFpIHJlc3BvbnNhYmlsaSBkZWwgcmlzdWx0YXRvLiBMYVxudHJhc3BhcmVuemEgcmljaGllZGUgY2hlIHRhbGkgYXNwZXR0aSBzaWFubyBkZWZpbml0aSBkYSB1bm8gc3RhbmRhcmQgY29tdW5lIGluIG1vZG8gY2hlIGdsaVxub3NzZXJ2YXRvcmkgY29uZGl2aWRhbm8gdW5hIGNvbXVuZSBjb21wcmVuc2lvbmUgZGkgY2nDsiBjaGUgdmllbmUgdmlzdG8uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiQWQgZXNlbXBpbzoiKV0pLF92bS5fdigiICIpLF9jKCdvbCcsW19jKCdsaScsW192bS5fdigiVW4gbGluZ3VhZ2dpbyBjb211bmUgZGkgcmlmZXJpbWVudG8gYWwgcHJvY2Vzc28gZGV2ZSBlc3NlcmUgY29uZGl2aXNvIGRhIHR1dHRpIGkgcGFydGVjaXBhbnRpOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJRdWVsbGkgY2hlIGVzZWd1b25vIGlsIGxhdm9ybyBlIHF1ZWxsaSBpc3BlemlvbmFubyBsJ0luY3JlbWVudG8gcmlzdWx0YW50ZSBkZXZvbm8gY29uZGl2aWRlcmUgdW5hIGRlZmluaXppb25lIGNvbXVuZSBkaSBcIkZhdHRvXCIiKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImlzcGV6aW9uZSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2lzcGV6aW9uZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBJc3BlemlvbmUiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJDaGkgdXRpbGl6emEgU2NydW0gZGV2ZSBpc3BlemlvbmFyZSBmcmVxdWVudGVtZW50ZSBnbGkgYXJ0ZWZhdHRpIGRpIFNjcnVtIGUgbOKAmWF2YW56YW1lbnRvIHZlcnNvXG51bm8gU3ByaW50IEdvYWwgY29uIGxvIHNjb3BvIGRpIHJpbGV2YXJlIGRldmlhemlvbmkgaW5kZXNpZGVyYXRlLiBUYWxpIGlzcGV6aW9uaSBub24gZG92cmViYmVyb1xuZXNzZXJlIHRhbnRvIGZyZXF1ZW50aSBkYSBpbnRyYWxjaWFyZSBpbCBsYXZvcm8gc3Rlc3NvLiBMZSBpc3Blemlvbmkgc29ubyBwacO5IHV0aWxpIHF1YW5kbyBlc2VndWl0ZVxuZGlsaWdlbnRlbWVudGUgZGEgY2hpIGhhIGzigJlhYmlsaXTDoCBlIGxhIGNvbXBldGVuemEgbmVjZXNzYXJpYSBhIGVmZmV0dHVhcmxlIHJpc3BldHRvIGFkIHVuXG5wYXJ0aWNvbGFyZSBzdGFkaW8gZGVsIGxhdm9yby4iKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJhZGF0dGFtZW50byJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2FkYXR0YW1lbnRvIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEFkYXR0YW1lbnRvIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiU2UgY2hpIGlzcGV6aW9uYSB2ZXJpZmljYSBjaGUgdW5vIG8gcGnDuSBhc3BldHRpIGRlbCBwcm9jZXNzbyBzb25vIGFsIGRpIGZ1b3JpIGRlaSBsaW1pdGkgYWNjZXR0YWJpbGkgZVxuY2hlIGlsIHByb2RvdHRvIGZpbmFsZSBub24gcG90csOgIGVzc2VyZSBhY2NldHRhdG8sIGFsbG9yYSBpbCBwcm9jZXNzbyBvIGlsIG1hdGVyaWFsZSBwcm9jZXNzYXRvXG5kZXZvbm8gZXNzZXJlIGFkYXR0YXRpLiBM4oCZYWRhdHRhbWVudG8gZGV2ZSBlc3NlcmUgcG9ydGF0byBhIHRlcm1pbmUgaWwgcGnDuSByYXBpZGFtZW50ZVxucG9zc2liaWxlIHBlciByaWR1cnJlIGFsIG1pbmltbyB1bid1bHRlcmlvcmUgZGV2aWF6aW9uZS5cblNjcnVtIHByZXNjcml2ZSBxdWF0dHJvIG9jY2FzaW9uaSBmb3JtYWxpIGFsbOKAmWludGVybm8gZGVsbG8gU3ByaW50IHBlciBs4oCZaXNwZXppb25lIGVcbmzigJlhZGF0dGFtZW50bywgY29tZSBkZXNjcml0dG8gbmVsbGEgc2V6aW9uZSBcIkdsaSBFdmVudGkgZGkgU2NydW1cIiBkaSBxdWVzdG8gZG9jdW1lbnRvOiIpXSksX3ZtLl92KCIgIiksX2MoJ29sJyxbX2MoJ2xpJyxbX3ZtLl92KCJTcHJpbnQgUGxhbm5pbmciKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiRGFpbHkgU2NydW0iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiU3ByaW50IFJldmlldyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJTcHJpbnQgUmV0cm9zcGVjdGl2ZSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiaS12YWxvcmktZGktc2NydW0ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNpLXZhbG9yaS1kaS1zY3J1bSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBJIHZhbG9yaSBkaSBTY3J1bSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlF1YW5kbyBpIHZhbG9yaSBkaSBpbXBlZ25vLCBjb3JhZ2dpbywgY29uY2VudHJhemlvbmUsIGFwZXJ0dXJhIGUgcmlzcGV0dG8gc29ubyBpbmNhcm5hdGkgZVxudmlzc3V0aSBkYWxsbyBTY3J1bSBUZWFtLCBpIHBpbGFzdHJpIFNjcnVtIGRpIHRyYXNwYXJlbnphLCBjb250cm9sbG8gZSBhZGF0dGFtZW50byBwcmVuZG9ubyB2aXRhXG5lIGNyZWFubyBmaWR1Y2lhIHBlciB0dXR0aS4gSSBtZW1icmkgZGVsbG8gU2NydW0gVGVhbSBpbXBhcmFubyBlZCBlc3Bsb3Jhbm8gdGFsaSB2YWxvcmkgZHVyYW50ZVxuaWwgbGF2b3JvIHN2b2x0byBhdHRyYXZlcnNvIGdsaSBldmVudGksIGkgcnVvbGkgZSBnbGkgYXJ0ZWZhdHRpIGRpIFNjcnVtLlxuTCd1c28gcHJvZmljdW8gZGkgU2NydW0gZGlwZW5kZSBkYSBxdWFudG8gbGUgcGVyc29uZSBkaXZlbnRhbm8gcGnDuSBlc3BlcnRlIG5lbCB2aXZlcmUgcXVlc3RpXG5jaW5xdWUgdmFsb3JpLiBMZSBwZXJzb25lIHNvbm8gcGVyc29uYWxtZW50ZSBkZWRpdGUgYWwgcmFnZ2l1bmdpbWVudG8gZGVnbGkgb2JpZXR0aXZpIGRlbGxvXG5TY3J1bSBUZWFtLiBJIG1lbWJyaSBkZWxsbyBTY3J1bSBUZWFtIGhhbm5vIGlsIGNvcmFnZ2lvIGRpIGZhcmUgbGEgY29zYSBnaXVzdGEgZSBkaSBsYXZvcmFyZSBzdWlcbnByb2JsZW1pIGRpZmZpY2lsaS4gT2dudW5vIHNpIGNvbmNlbnRyYSBzdWwgbGF2b3JvIGRlbGxvIFNwcmludCBlIHN1Z2xpIG9iaWV0dGl2aSBkZWxsbyBTY3J1bSBUZWFtLlxuTG8gU2NydW0gVGVhbSBlIGxlIHBhcnRpIGludGVyZXNzYXRlIGNvbmNvcmRhbm8gZGkgZXNzZXJlIGFwZXJ0aSBhIHR1dHRvIGlsIGxhdm9ybyBlIGFsbGUgc2ZpZGVcbnJlbGF0aXZlIGFsbGEgc3VhIGVzZWN1emlvbmUuIEkgbWVtYnJpIGRlbGxvIFNjcnVtIFRlYW0gc2kgcmlzcGV0dGFubyByZWNpcHJvY2FtZW50ZSBjb21lXG5wZXJzb25lIGNhcGFjaSBlZCBpbmRpcGVuZGVudGkuIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoibG8tc2NydW0tdGVhbSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2xvLXNjcnVtLXRlYW0ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgTG8gU2NydW0gVGVhbSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkxvIFNjcnVtIFRlYW0gw6ggZm9ybWF0byBkYSB1biBQcm9kdWN0IE93bmVyLCBkYWwgVGVhbSBkaSBTdmlsdXBwbyBlIGRhIHVubyBTY3J1bSBNYXN0ZXIuXG5HbGkgU2NydW0gVGVhbSBzb25vIGF1dG8tb3JnYW5penphdGkgZSBjcm9zcy1mdW56aW9uYWxpLiBJIFRlYW0gYXV0by1vcmdhbml6emF0aSBzY2VsZ29ubyBjb21lXG5tZWdsaW8gY29tcGllcmUgaWwgcHJvcHJpbyBsYXZvcm8gaW52ZWNlIGRpIGVzc2VyZSBkaXJldHRpIGRhIGFsdHJpIGFsIGRpIGZ1b3JpIGRlbCB0ZWFtLiBJIHRlYW1cbmNyb3NzLWZ1bnppb25hbGkgaGFubm8gdHV0dGUgbGUgY29tcGV0ZW56ZSBuZWNlc3NhcmllIHBlciByZWFsaXp6YXJlIGlsIGxhdm9ybyBzZW56YSBkb3ZlclxuZGlwZW5kZXJlIGRhIG5lc3N1bm8gYWwgZGkgZnVvcmkgZGVsIHRlYW0uIElsIG1vZGVsbG8gZGkgdGVhbSBpbiBTY3J1bSDDqCBwcm9nZXR0YXRvIHBlclxub3R0aW1penphcmUgbGEgZmxlc3NpYmlsaXTDoCwgbGEgY3JlYXRpdml0w6AgZSBsYSBwcm9kdXR0aXZpdMOgLiBMbyBTY3J1bSBUZWFtIGhhIGRpbW9zdHJhdG8gYSBzZSBzdGVzc29cbmRpIGVzc2VyZSBzZW1wcmUgcGnDuSBlZmZpY2FjZSBwZXIgdHV0dGkgZ2xpIHNjb3BpIHByZWNlZGVudGVtZW50ZSBkaWNoaWFyYXRpIGUgcGVyIHF1YWxzaWFzaSBsYXZvcm9cbmNvbXBsZXNzby4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJHbGkgU2NydW0gVGVhbSByaWxhc2NpYW5vIGkgcHJvZG90dGkgaW4gbW9kbyBpdGVyYXRpdm8gZSBpbmNyZW1lbnRhbGUsIG1hc3NpbWl6emFuZG8gbGVcbm9wcG9ydHVuaXTDoCBkaSBmZWVkYmFjay4gSSByaWxhc2NpIGluY3JlbWVudGFsaSBkaSBwcm9kb3R0byDigJxGYXR0b+KAnSBnYXJhbnRpc2Nvbm8gY2hlIHVuYSB2ZXJzaW9uZVxucG90ZW56aWFsbWVudGUgdXRpbGUgZGVsIHByb2RvdHRvIGZ1bnppb25hbnRlIHNpYSBzZW1wcmUgZGlzcG9uaWJpbGUuIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiaWwtcHJvZHVjdC1vd25lciJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2lsLXByb2R1Y3Qtb3duZXIifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgSWwgUHJvZHVjdCBPd25lciIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklsIFByb2R1Y3QgT3duZXIgaGEgbGEgcmVzcG9uc2FiaWxpdMOgIGRpIG1hc3NpbWl6emFyZSBpbCB2YWxvcmUgZGVsIHByb2RvdHRvIHJpc3VsdGFudGUgZGFsIGxhdm9yb1xuc3ZvbHRvIGRhbCBUZWFtIGRpIFN2aWx1cHBvLiBDb21lIHF1ZXN0byDDqCBmYXR0byBwdcOyIHZhcmlhcmUgZGkgbW9sdG8gc2Vjb25kbyBs4oCZb3JnYW5penphemlvbmUsXG5nbGkgU2NydW0gVGVhbSBlIGdsaSBpbmRpdmlkdWkuXG5JbCBQcm9kdWN0IE93bmVyIMOoIGwndW5pY2EgcGVyc29uYSByZXNwb25zYWJpbGUgZGVsbGEgZ2VzdGlvbmUgZGVsIFByb2R1Y3QgQmFja2xvZy4gVGFsZVxuZ2VzdGlvbmUgaW5jbHVkZToiKV0pLF92bS5fdigiICIpLF9jKCdvbCcsW19jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJFc3ByaW1lcmUgY2hpYXJhbWVudGUgZ2xpIGVsZW1lbnRpIGRlbCBQcm9kdWN0IEJhY2tsb2c7IildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJPcmRpbmFyZSBnbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBwZXIgbWVnbGlvIHJhZ2dpdW5nZXJlIGdsaSBvYmlldHRpdmkgZSBsZSBtaXNzaW9uaTsiKV0pXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ3AnLFtfdm0uX3YoIk90dGltaXp6YXJlIGlsIHZhbG9yZSBkZWwgbGF2b3JvIGRlbCBUZWFtIGRpIFN2aWx1cHBvOyIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygncCcsW192bS5fdigiQXNzaWN1cmFyZSBjaGUgaWwgUHJvZHVjdCBCYWNrbG9nIHNpYSB2aXNpYmlsZSwgdHJhc3BhcmVudGUgZSBjaGlhcm8gYSB0dXR0aSBlIG1vc3RyaSBzdSBjb3NhIGxvIFNjcnVtIFRlYW0gbGF2b3JlcsOgIGluIHNlZ3VpdG87IildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJBc3NpY3VyYXJlIGNoZSBpbCBUZWFtIGRpIFN2aWx1cHBvIGNvbXByZW5kYSBnbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBhbCBsaXZlbGxvIG5lY2Vzc2FyaW87IildKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklsIGxhdm9ybyBzb3ByYSBlbGVuY2F0byBwdcOyIGVzc2VyIGZhdHRvIGRhbCBQcm9kdWN0IE93bmVyIG8gZGFsIFRlYW0gZGkgU3ZpbHVwcG8uIFR1dHRhdmlhLCBpbCBQcm9kdWN0IE93bmVyIHJpbWFuZSBpbCByZXNwb25zYWJpbGUgZmluYWxlIChhY2NvdW50YWJsZSkuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSWwgUHJvZHVjdCBPd25lciDDqCB1buKAmXVuaWNhIHBlcnNvbmEsIG5vbiB1biBjb21pdGF0by4gSWwgUHJvZHVjdCBPd25lciBwdcOyIGVzcHJpbWVyZSBsYSB2b2xvbnTDoCBkaSB1biBjb21pdGF0byBuZWwgUHJvZHVjdCBCYWNrbG9nLCBtYSBjaGl1bnF1ZSB2b2dsaWEgY2FtYmlhcmUgbOKAmW9yZGluZSBkaSB1biBlbGVtZW50byBkZXZlIHJpdm9sZ2Vyc2kgYWwgUHJvZHVjdCBPd25lci4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJBZmZpbmNow6kgaWwgUHJvZHVjdCBPd25lciBwb3NzYSBhZ2lyZSBjb24gc3VjY2Vzc28sIGFsbOKAmWludGVybm8gZGVsbOKAmW9yZ2FuaXp6YXppb25lIHR1dHRpIGRldm9ubyByaXNwZXR0YXJlIGxlIHN1ZSBkZWNpc2lvbmkuIExlIGRlY2lzaW9uaSBkZWwgUHJvZHVjdCBPd25lciBzb25vIHZpc2liaWxpIG5lbCBjb250ZW51dG8gZSBuZWxs4oCZb3JkaW5lIGRlbGxlIHByaW9yaXTDoCBkZWwgUHJvZHVjdCBCYWNrbG9nLiBOZXNzdW5vIGhhIGlsIHBlcm1lc3NvIGRpIGRpcmUgYWwgVGVhbSBkaSBTdmlsdXBwbyBkaSBsYXZvcmFyZSBzdSB1biBkaXZlcnNvIGluc2llbWUgZGkgcmVxdWlzaXRpLCBlZCBpbCBUZWFtIGRpIFN2aWx1cHBvIG5vbiBoYSBpbCBwZXJtZXNzbyBkaSBhZ2lyZSBzdWxsYSBiYXNlIGRpIGNpw7IgY2hlIGRpY2UgY2hpdW5xdWUgYWx0cm8uIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiaWwtdGVhbS1kaS1zdmlsdXBwbyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2lsLXRlYW0tZGktc3ZpbHVwcG8ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgSWwgVGVhbSBkaSBTdmlsdXBwbyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklsIFRlYW0gZGkgU3ZpbHVwcG8gw6ggY29zdGl0dWl0byBkYSBwcm9mZXNzaW9uaXN0aSBjaGUgbGF2b3Jhbm8gcGVyIGNvbnNlZ25hcmUgdW4gSW5jcmVtZW50byDigJxGYXR0b+KAnSBkaSBwcm9kb3R0byBwb3RlbnppYWxtZW50ZSByaWxhc2NpYWJpbGUgYWxsYSBmaW5lIGRpIG9nbmkgU3ByaW50LiBBbGxhIFNwcmludCBSZXZpZXcgw6ggcmljaGllc3RvIHVuIEluY3JlbWVudG8gXCJGYXR0b1wiLiBTb2x0YW50byBpIG1lbWJyaSBkZWwgVGVhbSBkaSBTdmlsdXBwbyBjcmVhbm8gbOKAmUluY3JlbWVudG8uXG5JIFRlYW0gZGkgU3ZpbHVwcG8gc29ubyBzdHJ1dHR1cmF0aSBlIGF1dG9yaXp6YXRpIGRhbGwnb3JnYW5penphemlvbmUgcGVyIG9yZ2FuaXp6YXJlIGUgZ2VzdGlyZSBpbCBwcm9wcmlvIGxhdm9yby4gTGEgc2luZXJnaWEgcmlzdWx0YW50ZSBvdHRpbWl6emEgbOKAmWVmZmljaWVuemEgZSBs4oCZZWZmaWNhY2lhIGNvbXBsZXNzaXZlIGRlbCBUZWFtIGRpIFN2aWx1cHBvLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkkgVGVhbSBkaSBTdmlsdXBwbyBoYW5ubyBsZSBzZWd1ZW50aSBjYXJhdHRlcmlzdGljaGU6IildKSxfdm0uX3YoIiAiKSxfYygnb2wnLFtfYygnbGknLFtfYygncCcsW192bS5fdigiU29ubyBhdXRvLW9yZ2FuaXp6YXRpLiBOZXNzdW5vIChuZWFuY2hlIGxvIFNjcnVtIE1hc3RlcikgZGljZSBhbCBUZWFtIGRpIFN2aWx1cHBvIGNvbWUgdHJhc2Zvcm1hcmUgaWwgUHJvZHVjdCBCYWNrbG9nIGluIEluY3JlbWVudGkgZGkgZnVuemlvbmFsaXTDoCBwb3RlbnppYWxtZW50ZSByaWxhc2NpYWJpbGk7IildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJJIFRlYW0gZGkgU3ZpbHVwcG8gc29ubyBjcm9zcy1mdW56aW9uYWxpLCBjb24gdHV0dGUgbGUgY29tcGV0ZW56ZSBjb21lIHRlYW0gbmVjZXNzYXJpZSBwZXIgY3JlYXJlIHVuIEluY3JlbWVudG8gZGkgcHJvZG90dG87IildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJTY3J1bSBub24gcmljb25vc2NlIGFsY3VuIHRpdG9sbyBhaSBtZW1icmkgZGVsIFRlYW0gZGkgU3ZpbHVwcG8sIGluZGlwZW5kZW50ZW1lbnRlIGRhbCBsYXZvcm8gZXNlZ3VpdG8gZGFsbGEgcGVyc29uYTsiKV0pXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ3AnLFtfdm0uX3YoIlNjcnVtIG5vbiByaWNvbm9zY2UgYWxjdW4gc290dG8tdGVhbSBuZWwgVGVhbSBkaSBTdmlsdXBwbywgaW5kaXBlbmRlbnRlbWVudGUgZGFpIHBhcnRpLSBjb2xhcmkgZG9taW5pIGFpIHF1YWxpIMOoIG5lY2Vzc2FyaW8gZGVkaWNhcnNpIGNvbWUgdGVzdCwgYXJjaGl0ZXR0dXJhLCBvcGVyYXRpb24gbyBhbmFsaXNpIGRpIGJ1c2luZXNzOyIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygncCcsW192bS5fdigiSSBzaW5nb2xpIG1lbWJyaSBwb3Nzb25vIGF2ZXJlIGNvbXBldGVuemUgc3BlY2lhbGlzdGljaGUgZSBhcmVlIGRpIHNwZWNpYWxpenphemlvbmUsIG1hIGxhIHJlc3BvbnNhYmlsaXTDoCBkZXZlIGVzc2VyZSBpbXB1dGF0YSBhbCBUZWFtIGRpIFN2aWx1cHBvIG5lbCBzdW8gY29tcGxlc3NvLiIpXSldKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJsYS1kaW1lbnNpb25lLWRlbC10ZWFtLWRpLXN2aWx1cHBvIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjbGEtZGltZW5zaW9uZS1kZWwtdGVhbS1kaS1zdmlsdXBwbyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBMYSBkaW1lbnNpb25lIGRlbCBUZWFtIGRpIFN2aWx1cHBvIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiTGEgZGltZW5zaW9uZSBvdHRpbWFsZSBkZWwgVGVhbSBkaSBTdmlsdXBwbyDDqCBhYmJhc3RhbnphIHBpY2NvbGEgZGEgcmltYW5lcmUgYWdpbGUgZSBhYmJhcy0gdGFuemEgZ3JhbmRlIGRhIGNvbXBsZXRhcmUgdW4gbGF2b3JvIHNpZ25pZmljYXRpdm8gYWxs4oCZaW50ZXJubyBkZWxsbyBTcHJpbnQuIEF2ZXJlIG1lbm8gZGkgdHJlIHBlcnNvbmUgbmVsIFRlYW0gZGkgU3ZpbHVwcG8gZGltaW51aXNjZSBs4oCZaW50ZXJhemlvbmUgZSBjb21wb3J0YSB1biBtaW5vcmUgZ3VhZGFnbm8gaW4gdGVyLSBtaW5pIGRpIHByb2R1dHRpdml0w6AuIFRlYW0gZGkgU3ZpbHVwcG8gcGnDuSBwaWNjb2xpIHBvdHJlYmJlcm8gaW5jb250cmFyZSBsaW1pdGkgZG92dXRpIGFsbGEgbWFuY2FuemEgZGkgc2tpbGwgZHVyYW50ZSBsbyBTcHJpbnQsIGNoZSBpbXBlZGlzY29ubyBsYSBjb25zZWduYSBkaSB1biBJbmNyZW1lbnRvIHBvdGVuemktIGFsbWVudGUgcmlsYXNjaWFiaWxlLiBBdmVyZSBwacO5IGRpIG5vdmUgcGVyc29uZSBuZWwgVGVhbSBkaSBTdmlsdXBwbyByaWNoaWVkZSB1biBlY2Nlc3Npdm8gbGF2b3JvIGRpIGNvb3JkaW5hbWVudG8uIEkgVGVhbSBkaSBTdmlsdXBwbyBkaSBncmFuZGkgZGltZW5zaW9uaSBnZW5lcmFubyB0cm9wcGEgY29tcGxlc3NpdMOgIHJpc3BldHRvIGEgcXVlbGxhIGdlc3RpYmlsZSBkYSB1biBwcm9jZXNzbyBlbXBpcmljby4gSSBydW9saSBkZWwgUHJvZHVjdCBPd25lciBlIGRlbGxvIFNjcnVtIE1hc3RlciBub24gc29ubyBpbmNsdXNpIG5lbCBjb250ZWdnaW8sIGEgbWVubyBjaGUgbm9uIHN0aWFubyBlc2VndWVuZG8gYW5jaGUgbG9ybyBpbCBsYXZvcm8gY29udGVudXRvIG5lbGxvIFNwcmludCBCYWNrbG9nLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6ImxvLXNjcnVtLW1hc3RlciJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2xvLXNjcnVtLW1hc3RlciJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBMbyBTY3J1bSBNYXN0ZXIiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMbyBTY3J1bSBNYXN0ZXIgw6ggcmVzcG9uc2FiaWxlIGRpIHByb211b3ZlcmUgZSBzb3N0ZW5lcmUgU2NydW0gY29tZSBkZWZpbml0byBuZWxsYSBHdWlkYSBhIFNjcnVtLiBHbGkgU2NydW0gTWFzdGVyIGZhbm5vIHF1ZXN0byBhaXV0YW5kbyBjaGl1bnF1ZSBhIGNvbXByZW5kZXJlIGxhIHRlb3JpYSwgbGUgcHJhdGljaGUsIGxlIHJlZ29sZSwgZWQgaSB2YWxvcmkgZGkgU2NydW0uXG7DiCB1biBsZWFkZXIgYSBzZXJ2aXppbyAoc2VydmFudC1sZWFkZXIpIGRlbGxvIFNjcnVtIFRlYW0uIExvIFNjcnVtIE1hc3RlciBhaXV0YSBjb2xvcm8gYWwgZGkgZnVvcmkgZGVsbG8gU2NydW0gVGVhbSBhIGNhcGlyZSBxdWFsaSBkZWxsZSBsb3JvIGludGVyYXppb25pIGNvbiBsbyBTY3J1bSBUZWFtIHNvbm8gdXRpbGkgZSBxdWFsaSBuby4gQWl1dGEgdHV0dGkgYSBtb2RpZmljYXJlIHF1ZXN0ZSBpbnRlcmF6aW9uaSBwZXIgbWFzc2ltaXp6YXJlIGlsIHZhbG9yZSBjcmVhdG8gZGFsbG8gU2NydW0gVGVhbS4iKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJsby1zY3J1bS1tYXN0ZXItYWwtc2Vydml6aW8tZGVsLXByb2R1Y3Qtb3duZXIifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNsby1zY3J1bS1tYXN0ZXItYWwtc2Vydml6aW8tZGVsLXByb2R1Y3Qtb3duZXIifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgTG8gU2NydW0gTWFzdGVyIGFsIHNlcnZpemlvIGRlbCBQcm9kdWN0IE93bmVyIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiTG8gU2NydW0gTWFzdGVyIHJlbmRlIHVuIHNlcnZpemlvIGFsIFByb2R1Y3QgT3duZXIgaW4gdmFyaSBtb2RpLCB0cmEgY3VpOiIpXSksX3ZtLl92KCIgIiksX2MoJ29sJyxbX2MoJ2xpJyxbX3ZtLl92KCJBc3NpY3VyYXJlIGNoZSBvYmlldHRpdmksIHBvcnRhdGEgZSBkb21pbmlvIGRlbCBwcm9kb3R0byBzaWFubyBjb21wcmVzaSBpbCBtZWdsaW8gcG9zc2liaWxlIGRhIHR1dHRpIG5lbGxvIFNjcnVtIFRlYW0uIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlRyb3ZhcmUgbGUgdGVjbmljaGUgcGVyIHVuYSBnZXN0aW9uZSBlZmZpY2FjZSBkZWwgUHJvZHVjdCBCYWNrbG9nOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJBaXV0YXJlIGxvIFNjcnVtIFRlYW0gYSBjb21wcmVuZGVyZSBsYSBuZWNlc3NpdMOgIGRpIGF2ZXJlIGVsZW1lbnRpIGRlbCBQcm9kdWN0IEJhY2tsb2dcbmNoaWFyaSBlIGNvbmNpc2k7IildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkNvbXByZW5kZXJlIGxhIHBpYW5pZmljYXppb25lIGRlbCBwcm9kb3R0byBpbiB1biBhbWJpZW50ZSBlbXBpcmljbzsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiQXNzaWN1cmFyZSBjaGUgaWwgUHJvZHVjdCBPd25lciBjYXBpc2NhIGNvbWUgb3JkaW5hcmUgZ2xpIGVsZW1lbnRpIGRlbCBQcm9kdWN0IEJhY2tsb2cgcGVyIG1hc3NpbWl6emFyZSBpbCB2YWxvcmU7IildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkNvbXByZW5kZXJlIGUgcHJhdGljYXJlIGzigJlhZ2lsaXTDoDsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiRmFjaWxpdGFyZSBnbGkgZXZlbnRpIFNjcnVtIGNvbWUgcmljaGllc3RvIGUgbmVjZXNzYXJpby4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImxvLXNjcnVtLW1hc3Rlci1hbC1zZXJ2aXppby1kZWwtdGVhbS1kaS1zdmlsdXBwbyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2xvLXNjcnVtLW1hc3Rlci1hbC1zZXJ2aXppby1kZWwtdGVhbS1kaS1zdmlsdXBwbyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBMbyBTY3J1bSBNYXN0ZXIgYWwgc2Vydml6aW8gZGVsIFRlYW0gZGkgU3ZpbHVwcG8iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMbyBTY3J1bSBNYXN0ZXIgcmVuZGUgdW4gc2Vydml6aW8gYWwgVGVhbSBkaSBTdmlsdXBwbyBpbiB2YXJpIG1vZGksIHRyYSBjdWk6IildKSxfdm0uX3YoIiAiKSxfYygnb2wnLFtfYygnbGknLFtfdm0uX3YoIkFsbGVuYXJlIGlsIFRlYW0gZGkgU3ZpbHVwcG8gYWxs4oCZYXV0by1vcmdhbml6emF6aW9uZSBlIGFsbGEgY3Jvc3MtZnVuemlvbmFsaXTDoDsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiQWl1dGFyZSBpbCBUZWFtIGRpIFN2aWx1cHBvIGEgY3JlYXJlIHByb2RvdHRpIGRpIGFsdG8gdmFsb3JlOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJFbGltaW5hcmUgZ2xpIG9zdGFjb2xpIGFsbCdhdmFuemFtZW50byBkZWwgVGVhbSBkaSBTdmlsdXBwbzsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiRmFjaWxpdGFyZSBnbGkgZXZlbnRpIFNjcnVtIGNvbWUgcmljaGllc3RvIG8gbmVjZXNzYXJpbzsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiQXNzaXN0ZXJlIGlsIFRlYW0gZGkgU3ZpbHVwcG8gaW4gYW1iaWVudGkgb3JnYW5penphdGl2aSBpbiBjdWkgU2NydW0gbm9uIMOoIGFuY29yYSBwaWVuYW1lbnRlIGFkb3R0YXRvIGUgY29tcHJlc28uIildKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJsby1zY3J1bS1tYXN0ZXItYWwtc2Vydml6aW8tZGVsbC1vcmdhbml6emF6aW9uZSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2xvLXNjcnVtLW1hc3Rlci1hbC1zZXJ2aXppby1kZWxsLW9yZ2FuaXp6YXppb25lIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIExvIFNjcnVtIE1hc3RlciBhbCBzZXJ2aXppbyBkZWxs4oCZT3JnYW5penphemlvbmUiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMbyBTY3J1bSBNYXN0ZXIgcmVuZGUgdW4gc2Vydml6aW8gYWxs4oCZT3JnYW5penphemlvbmUgaW4gdmFyaSBtb2RpLCB0cmEgY3VpOiIpXSksX3ZtLl92KCIgIiksX2MoJ29sJyxbX2MoJ2xpJyxbX3ZtLl92KCJHdWlkYXJlIGVkIGFzc2lzdGVyZSBs4oCZb3JnYW5penphemlvbmUgYWxs4oCZYWRvemlvbmUgZGkgU2NydW07IildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlBpYW5pZmljYXJlIGxlIGltcGxlbWVudGF6aW9uaSBkaSBTY3J1bSBhbGzigJlpbnRlcm5vIGRlbGzigJlvcmdhbml6emF6aW9uZTsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiQWl1dGFyZSBpIGRpcGVuZGVudGkgZWQgaSBwb3J0YXRvcmkgZGkgaW50ZXJlc3NpIChzdGFrZWhvbGRlcikgYSBjb21wcmVuZGVyZSBlZCBhdHR1YXJlIFNjcnVtIGUgbG8gc3ZpbHVwcG8gZGVsIHByb2RvdHRvOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJQcm92b2NhcmUgaWwgY2FtYmlhbWVudG8gY2hlIGF1bWVudGEgbGEgcHJvZHV0dGl2aXTDoCBkZWxsbyBTY3J1bSBUZWFtOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJMYXZvcmFyZSBjb24gYWx0cmkgU2NydW0gTWFzdGVyIHBlciBhdW1lbnRhcmUgbOKAmWVmZmljYWNpYSBkZWxs4oCZYXBwbGljYXppb25lIGRpIFNjcnVtIG5lbGzigJlvci1cbmdhbml6emF6aW9uZS4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6ImdsaS1ldmVudGktZGktc2NydW0ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNnbGktZXZlbnRpLWRpLXNjcnVtIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEdsaSBFdmVudGkgZGkgU2NydW0iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJHbGkgZXZlbnRpIHByZXNjcml0dGkgc29ubyB1dGlsaXp6YXRpIGluIFNjcnVtIHBlciBjcmVhcmUgcmVnb2xhcml0w6AgZSByaWR1cnJlIGFsIG1pbmltbyBsYSBuZWNlc3NpdMOgIGRpIGluY29udHJpIG5vbiBkZWZpbml0aSBpbiBTY3J1bS4gVHV0dGkgZ2xpIGV2ZW50aSBzb25vIGxpbWl0YXRpIHRlbXBvcmFsbWVudGUgKHRpbWUtYm94ZWQpLCBjb3PDrCBkYSBhdmVyZSB1bmEgZHVyYXRhIG1hc3NpbWEgZmlzc2EuIFF1YW5kbyB1bm8gU3ByaW50IGluaXppYSwgbGEgc3VhIGR1cmF0YSDDqCBwcmVmaXNzYXRhIGUgbm9uIHB1w7IgZXNzZXJlIG7DqSBhY2NvcmNpYXRhIG7DqSBhbGx1bmdhdGEuIEdsaSBhbHRyaSBldmVudGkgcG9zc29ubyBpbnZlY2UgdGVybWluYXJlIHF1YW5kbyDDqCByYWdnaXVudG8gaWwgbG9ybyBzY29wbywgYXNzaWN1cmFuZG8gY2hlIHNpYSBzcGVzYSBs4oCZYXBwcm9wcmlhdGEgcXVhbnRpdMOgIGRpIHRlbXBvIGV2aXRhbmRvIHNwcmVjaGkgYWxs4oCZaW50ZXJubyBkZWwgcHJvY2Vzc28uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiT2x0cmUgYWxsbyBTcHJpbnQgaW4gc8OpLCBjaGUgw6ggdW4gY29udGVuaXRvcmUgZGkgdHV0dGkgZ2xpIGFsdHJpIGV2ZW50aSwgb2duaSBldmVudG8gaW4gU2NydW0gw6ggdW5hIG9jY2FzaW9uZSBmb3JtYWxlIHBlciBpc3BlemlvbmFyZSBlIGFkYXR0YXJlIHF1YWxjb3NhLiBRdWVzdGkgZXZlbnRpIHNvbm8gc3BlY2lmaWNhbWVudGUgcHJvZ2V0dGF0aSBwZXIgY29uc2VudGlyZSB0cmFzcGFyZW56YSBlZCBpc3BlemlvbmUgY3JpdGljaGUuIFVuIGZhbGxpbWVudG8gbmVsbCdpbmNsdWRlcmUgdW5vIHF1YWxzaWFzaSBkaSBxdWVzdGkgZXZlbnRpIGNvbXBvcnRhIHVuYSByaWR1emlvbmUgZGVsbGEgdHJhc3BhcmVuemEgZWQgw6ggdW7igJlvY2Nhc2lvbmUgbWFuY2F0YSBwZXIgcHJhdGljYXJlIGzigJlpc3BlemlvbmUgZSBs4oCZYWRhdHRhbWVudG8uIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoibG8tc3ByaW50In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjbG8tc3ByaW50In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIExvIFNwcmludCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklsIGN1b3JlIGRpIFNjcnVtIMOoIHVubyBTcHJpbnQsIHVuIHBlcmlvZG8gbGltaXRlICh0aW1lLWJveCkgZGkgdW4gbWVzZSBvIG1lbm8gZHVyYW50ZSBsYSBxdWFsZSB2aWVuZSBjcmVhdG8gdW4gSW5jcmVtZW50byBkaSBwcm9kb3R0byBwb3RlbnppYWxtZW50ZSByaWxhc2NpYWJpbGUsIHV0aWxpenphYmlsZSBlIOKAnEZhdHRv4oCdLiBHbGkgU3ByaW50IGhhbm5vIHVuYSBkdXJhdGEgY29zdGFudGUgZHVyYW50ZSBpbCBsYXZvcm8gZGkgc3ZpbHVwcG8uIFVuIG51b3ZvIFNwcmludCBzaSBhdnZpYSBpbW1lZGlhdGFtZW50ZSBkb3BvIGxhIGNvbmNsdXNpb25lIGRlbGxvIFNwcmludCBwcmVjZWRlbnRlLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkdsaSBTcHJpbnQgY29udGVuZ29ubyBlIHNvbm8gY29zdGl0dWl0aSBkYTogbG8gU3ByaW50IFBsYW5uaW5nLCBpbCBEYWlseSBTY3J1bSwgaWwgbGF2b3JvIGRpIHN2aWx1cHBvLCBsYSBTcHJpbnQgUmV2aWV3IGUgbGEgU3ByaW50IFJldHJvc3BlY3RpdmUuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiRHVyYW50ZSBsbyBTcHJpbnQ6IildKSxfdm0uX3YoIiAiKSxfYygnb2wnLFtfYygnbGknLFtfdm0uX3YoIk5vbiBwb3Nzb25vIGVzc2VyZSBmYXR0ZSBtb2RpZmljaGUgY2hlIG1ldHRvbm8gYSByaXNjaGlvIGxvIFNwcmludCBHb2FsOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJHbGkgb2JpZXR0aXZpIHJlbGF0aXZpIGFsbGEgcXVhbGl0w6Agbm9uIGRldm9ubyBkZWdyYWRhcnNpOyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJMYSB2aXNpYmlsaXTDoCBwdcOyIGVzc2VyZSBjaGlhcml0YSBlIHJpbmVnb3ppYXRhIHRyYSBpbCBQcm9kdWN0IE93bmVyIGUgaWwgRGV2ZWxvcG1lbnQgVGVhbSwgcXVhbmRvIHNpIMOoIGFwcHJlc28gZGkgcGnDuS4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIk9nbmkgU3ByaW50IHB1w7IgZXNzZXJlIGNvbnNpZGVyYXRvIHVuIHByb2dldHRvIGNvbiB1biBvcml6em9udGUgbm9uIHBpw7kgbHVuZ28gZGkgdW4gbWVzZS4gQ29tZSBpIHByb2dldHRpLCBnbGkgU3ByaW50IHNvbm8gdXRpbGl6emFiaWxpIHBlciByZWFsaXp6YXJlIHF1YWxjb3NhLiBPZ25pIFNwcmludCBoYSB1biBvYmlldHRpdm8gZGkgY2nDsiBjaGUgc2kgdmEgYSBjb3N0cnVpcmUsIHVuIHByb2dldHRvIGUgdW4gcGlhbm8gZmxlc3NpYmlsZSBjaGUgZ3VpZGVyYW5ubyBsYSBjb3N0cnV6aW9uZSwgaWwgbGF2b3JvIHN2b2x0byBlIGwnSW5jcmVtZW50byByaXN1bHRhbnRlLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkdsaSBTcHJpbnQgc29ubyBsaW1pdGF0aSBhZCB1biBtZXNlIGRpIGNhbGVuZGFyaW8uIFF1YW5kbyB1bm8gU3ByaW50IGhhIHVuIG9yaXp6b250ZSB0ZW1wb3JhbGUgdHJvcHBvIGx1bmdvIGxhIGRlZmluaXppb25lIGRpIGNpw7IgY2hlIHZpZW5lIGNvc3RydWl0byBwdcOyIGNhbWJpYXJlLCBsYSBjb21wbGVzc2l0w6AgcHXDsiBjcmVzY2VyZSBlZCBpbCByaXNjaGlvIHB1w7IgYXVtZW50YXJlLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkdsaSBTcHJpbnQgcmVuZG9ubyBwb3NzaWJpbGUgbGEgcHJldmVkaWJpbGl0w6AgYXNzaWN1cmFuZG8sIGFsbWVubyB1bmEgdm9sdGEgYWwgbWVzZSwgbOKAmWlzcGV6aW9uZSBlIGwnYWRhdHRhbWVudG8gZGVsIHByb2dyZXNzbyB2ZXJzbyB1bm8gU3ByaW50IEdvYWwuIEdsaSBTcHJpbnQgaW5vbHRyZSBsaW1pdGFubyBpbCByaXNjaGlvIGFkIHVuIG1lc2UgZGkgY29zdG8uIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiY2FuY2VsbGFyZS11bm8tc3ByaW50In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjY2FuY2VsbGFyZS11bm8tc3ByaW50In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIENhbmNlbGxhcmUgdW5vIFNwcmludCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlVubyBTcHJpbnQgcHXDsiBlc3NlcmUgY2FuY2VsbGF0byBwcmltYSBjaGUgZmluaXNjYSBpbCBzdW8gdGVtcG8gbGltaXRlICh0aW1lLWJveCkuIFNvbG8gaWwgUHJvZHVjdCBPd25lciBoYSBs4oCZYXV0b3JpdMOgIGRpIGFubnVsbGFyZSBsbyBTcHJpbnQsIGFuY2hlIHNlIHB1w7IgZmFybG8gc290dG8gbOKAmWluZmx1ZW56YSBkZWkgcG9ydGF0b3JpIGRpIGludGVyZXNzZSAoc3Rha2Vob2xkZXIpLCBkZWwgVGVhbSBkaSBTdmlsdXBwbyBvIGRlbGxvIFNjcnVtIE1hc3Rlci4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJVbm8gU3ByaW50IHNhcmViYmUgY2FuY2VsbGF0byBzZSBsbyBTcHJpbnQgR29hbCBkaXZlbnRhc3NlIG9ic29sZXRvLiBRdWVzdG8gcG90cmViYmUgdmVyaWZpY2Fyc2kgc2UgbOKAmW9yZ2FuaXp6YXppb25lIGNhbWJpYSBkaXJlemlvbmUgbyBzZSBsZSBjb25kaXppb25pIGRpIG1lcmNhdG8gbyBkZWxsYSB0ZWNub2xvZ2lhIGNhbWJpYW5vLiBJbiBnZW5lcmFsZSwgdW5vIFNwcmludCBkb3ZyZWJiZSBlc3NlcmUgYW5udWxsYXRvIHNlIG5vbiBoYSBwacO5IHNlbnNvIGRhdGUgbGUgY2lyY29zdGFuemUuIEFkIG9nbmkgbW9kbywgZGF0YSBsYSBicmV2ZSBkdXJhdGEgZGVnbGkgU3ByaW50LCBsYSBzdWEgY2FuY2VsbGF6aW9uZSByYXJhbWVudGUgaGEgc2Vuc28uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiUXVhbmRvIHVubyBTcHJpbnQgw6ggYW5udWxsYXRvLCBvZ25pIGVsZW1lbnRvIGRlbCBQcm9kdWN0IEJhY2tsb2cgZ2nDoCBjb21wbGV0YXRvIGUg4oCcRmF0dG/igJ0gw6ggZXNhbWluYXRvLiBTZSBwYXJ0ZSBkZWwgbGF2b3JvIMOoIHBvdGVuemlhbG1lbnRlIHJpbGFzY2lhYmlsZSBpbCBQcm9kdWN0IE93bmVyIHRpcGljYW1lbnRlIGxhIGFjY2V0dGEuIFR1dHRpIGdsaSBlbGVtZW50aSBpbmNvbXBsZXRpIGRlbCBQcm9kdWN0IEJhY2tsb2cgc29ubyBudW92YW1lbnRlIHN0aW1hdGkgZSByZWluc2VyaXRpIG5lbCBQcm9kdWN0IEJhY2tsb2cuIElsIGxhdm9ybyBzdm9sdG8gc3UgZGkgZXNzZSBzaSBkZXByZXp6YSByYXBpZGFtZW50ZSBlIGRldmUgZXNzZXJlIGZyZXF1ZW50ZW1lbnRlIHJpc3RpbWF0by4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMZSBjYW5jZWxsYXppb25pIGRlZ2xpIFNwcmludCBjb25zdW1hbm8gcmlzb3JzZSwgcG9pY2jDqSB0dXR0aSByaXBhcnRlY2lwYW5vIGFkIHVuIGFsdHJvIFNwcmludCBQbGFubmluZyBwZXIgcG90ZXIgY29taW5jaWFyZSB1biBhbHRybyBTcHJpbnQuIExlIGNhbmNlbGxhemlvbmkgZGVnbGkgU3ByaW50IHNvbm8gc3Blc3NvIHRyYXVtYXRpY2hlIHBlciBsbyBTY3J1bSBUZWFtIGUgc29ubyBtb2x0byByYXJlLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6InNwcmludC1wbGFubmluZyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3NwcmludC1wbGFubmluZyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTcHJpbnQgUGxhbm5pbmciKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCBsYXZvcm8gZGEgZXNlZ3VpcmUgbmVsbG8gU3ByaW50IMOoIHBpYW5pZmljYXRvIGR1cmFudGUgbG8gU3ByaW50IFBsYW5uaW5nLiBUYWxlIHBpYW5pZmljYXppb25lIMOoIGNyZWF0YSBncmF6aWUgYWwgbGF2b3JvIGNvbGxhYm9yYXRpdm8gZGVsbCdpbnRlcm8gU2NydW0gVGVhbS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMbyBTcHJpbnQgUGxhbm5pbmcgw6ggbGltaXRhdG8gdGVtcG9yYWxtZW50ZSAodGltZS1ib3hlZCkgYWQgdW4gbWFzc2ltbyBkaSBvdHRvIG9yZSBwZXIgdW5vIFNwcmludCBkaSB1biBtZXNlLiBQZXIgU3ByaW50IHBpw7kgYnJldmksIGzigJlldmVudG8gw6ggZGkgc29saXRvIHBpw7kgYnJldmUuIExvIFNjcnVtIE1hc3RlciBzaSBhc3NpY3VyYSBjaGUgbCdldmVudG8gYWJiaWEgbHVvZ28gZSBjaGUgaSBwYXJ0ZWNpcGFudGkgbmUgY29tcHJlbmRhbm8gbGEgZmluYWxpdMOgLiBMbyBTY3J1bSBNYXN0ZXIgaW5zZWduYSBhbGxvIFNjcnVtIFRlYW0gY29tZSBzdm9sZ2VybG8gbmVsIHRlbXBvIGxpbWl0ZSAodGltZS1ib3gpLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkxvIFNwcmludCBQbGFubmluZyByaXNwb25kZSBhbGxlIHNlZ3VlbnRpIGRvbWFuZGU6IildKSxfdm0uX3YoIiAiKSxfYygnb2wnLFtfYygnbGknLFtfdm0uX3YoIlF1YWwgw6ggbG8gU3ByaW50IEdvYWw/IildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkNvc2EgcHXDsiBlc3NlcmUgY29uc2VnbmF0byBuZWxsJ0luY3JlbWVudG8gcmlzdWx0YW50ZSBkYWxsbyBTcHJpbnQgaW1taW5lbnRlPyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJDb21lIHNhcsOgIG1lc3NvIGluIG9wZXJhIGlsIGxhdm9ybyBuZWNlc3NhcmlvIGEgY29uc2VnbmFyZSBsJ0luY3JlbWVudG8/IildKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJwcmltby10ZW1hLWNvc2EtcHVvLWVzc2VyZS1mYXR0by1pbi1xdWVzdG8tc3ByaW50In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjcHJpbW8tdGVtYS1jb3NhLXB1by1lc3NlcmUtZmF0dG8taW4tcXVlc3RvLXNwcmludCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBQcmltbyB0ZW1hOiBDb3NhIHB1w7IgZXNzZXJlIGZhdHRvIGluIHF1ZXN0byBTcHJpbnQ/IildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSWwgVGVhbSBkaSBTdmlsdXBwbyBsYXZvcmEgcGVyIHByZXZlZGVyZSBsZSBmdW56aW9uYWxpdMOgIGNoZSBzYXJhbm5vIHN2aWx1cHBhdGUgZHVyYW50ZSBsbyBTcHJpbnQuIElsIFByb2R1Y3QgT3duZXIgZGlzY3V0ZSBsJ29iaWV0dGl2byBhbCBxdWFsZSBsbyBTcHJpbnQgZG92cmViYmUgYXNwaXJhcmUgZSBnbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBjaGUsIHNlIGNvbXBsZXRhdGkgZHVyYW50ZSBsbyBTcHJpbnQsIHBlcm1ldHRlcmViYmVybyBkaSByYWdnaXVuZ2VyZSBsbyBTcHJpbnQgR29hbC4gTCdpbnRlcm8gU2NydW0gVGVhbSBjb2xsYWJvcmEgcGVyIGNvbXByZW5kZXJlIGlsIGxhdm9ybyBkZWxsbyBTcHJpbnQuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiTOKAmWlucHV0IHBlciBxdWVzdG8gaW5jb250cm8gc29ubyBpbCBQcm9kdWN0IEJhY2tsb2csIGzigJl1bHRpbW8gSW5jcmVtZW50byBkZWwgcHJvZG90dG8sIGxhIGNhcGFjaXTDoCBwcmV2aXN0YSBkZWwgVGVhbSBkaSBTdmlsdXBwbyBkdXJhbnRlIGxvIFNwcmludCBlIGxlIHByZXN0YXppb25pIHJlZ2lzdHJhdGUgaW4gcGFzc2F0byBkZWwgVGVhbSBkaSBTdmlsdXBwby4gSWwgbnVtZXJvIGRpIGVsZW1lbnRpIHNlbGV6aW9uYXRpIGRhbCBQcm9kdWN0IEJhY2tsb2cgcGVyIGxvIFNwcmludCDDqCBkZWZpbml0byBlc2NsdXNpdmFtZW50ZSBkYWwgVGVhbSBkaSBTdmlsdXBwby4gU29sdGFudG8gaWwgVGVhbSBkaSBTdmlsdXBwbyDDqCBpbiBncmFkbyBkaSB2YWx1dGFyZSBjb3NhIHB1w7IgY29tcGllcmUgZHVyYW50ZSBpbCBwcm9zc2ltbyBTcHJpbnQuXG5EdXJhbnRlIGxvIFNwcmludCBQbGFubmluZyBsbyBTY3J1bSBUZWFtIG1vZGVsbGEgYW5jaGUgdW5vIFNwcmludCBHb2FsLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkxvIFNwcmludCBHb2FsIMOoIHVuIG9iaWV0dGl2byBjaGUgc2Fyw6AgcmFnZ2l1bnRvIGFsbCdpbnRlcm5vIGRlbGxvIFNwcmludCBhdHRyYXZlcnNvIGwnaW1wbGVtZW50YXppb25lIGRlbCBQcm9kdWN0IEJhY2tsb2cgZSBmb3JuaXNjZSBpbmRpY2F6aW9uaSBhbCBUZWFtIGRpIFN2aWx1cHBvIHN1bGxlIG1vdGl2YXppb25pIHBlciBsZSBxdWFsaSBpbCBUZWFtIGRpIFN2aWx1cHBvIHN0ZXNzbyBzdGEgY29zdHJ1ZW5kbyBsJ0luY3JlbWVudG8uIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoic2Vjb25kby10ZW1hLWNvbWUtc2ktZWZmZXR0dWVyYS1pbC1sYXZvcm8tc2NlbHRvIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjc2Vjb25kby10ZW1hLWNvbWUtc2ktZWZmZXR0dWVyYS1pbC1sYXZvcm8tc2NlbHRvIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFNlY29uZG8gdGVtYTogQ29tZSBzaSBlZmZldHR1ZXLDoCBJbCBsYXZvcm8gc2NlbHRvPyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkRvcG8gYXZlciBjcmVhdG8gbG8gU3ByaW50IEdvYWwgZSBzZWxlemlvbmF0byBnbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBwZXIgbG8gU3ByaW50LCBpbCBUZWFtIGRpIFN2aWx1cHBvIGRlY2lkZSBjb21lIGNvc3RydWlyw6AsIGR1cmFudGUgbG8gU3ByaW50LCBxdWVzdGUgZnVuemlvbmFsaXTDoCBpbiB1biBJbmNyZW1lbnRvIOKAnEZhdHRv4oCdIGRlbCBwcm9kb3R0by4gR2xpIGVsZW1lbnRpIGRlbCBQcm9kdWN0IEJhY2tsb2cgc2VsZXppb25hdGkgcGVyIGxvIFNwcmludCBwacO5IGlsIHBpYW5vIHBlciBsYSBjb25zZWduYXJsaSBkZWZpbmlzY29ubyBsbyBTcHJpbnQgQmFja2xvZy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCBUZWFtIGRpIFN2aWx1cHBvIGRpIHNvbGl0byBpbml6aWEgY29uIGxhIHByb2dldHRhemlvbmUgZGVsIHNpc3RlbWEgZSBkZWwgbGF2b3JvIG5lY2Vzc2FyaW8gcGVyIGNvbnZlcnRpcmUgaWwgUHJvZHVjdCBCYWNrbG9nIGluIHVuIEluY3JlbWVudG8gZnVuemlvbmFudGUgZGVsIHByb2RvdHRvLiBJbCBsYXZvcm8gcHXDsiBlc3NlcmUgZGkgdmFyaWEgZGltZW5zaW9uZSBvIGltcGVnbm8gc3RpbWF0by4gVHV0dGF2aWEsIHVuYSBxdWFudGl0w6Agc3VmZmljaWVudGUgZGkgbGF2b3JvIMOoIHBpYW5pZmljYXRhIGR1cmFudGUgaWwgbWVldGluZyBkaSBTcHJpbnQgUGxhbm5pbmcgY29zw6wgZGEgcGVybWV0dGVyZSBhbCBUZWFtIGRpIFN2aWx1cHBvIGRpIHByZXZlZGVyZSBjacOyIGNoZSByaXRpZW5lIGRpIHBvdGVyIGZhcmUgbmVsIHByb3NzaW1vIFNwcmludC4gQWxsYSBmaW5lIGRpIHF1ZXN0byBtZWV0aW5nLCBpbCBsYXZvcm8gY2hlIGlsIFRlYW0gZGkgU3ZpbHVwcG8gaGEgcGlhbmlmaWNhdG8gcGVyIGkgcHJpbWkgZ2lvcm5pIGRlbGxvIFNwcmludCDDqCBzcGVzc28gc3VkZGl2aXNvIGluIHVuaXTDoCBkZWxsYSBkdXJhdGEgZGkgdW4gZ2lvcm5vIG8gbWVuby4gSWwgVGVhbSBkaSBTdmlsdXBwbyBzaSBhdXRvZ2VzdGlzY2UgcGVyIGludHJhcHJlbmRlcmUgaWwgbGF2b3JvIGNvbnRlbnV0byBuZWxsbyBTcHJpbnQgQmFja2xvZywgc2lhIGR1cmFudGUgbG8gU3ByaW50IFBsYW5uaW5nIE1lZXRpbmcgY2hlIGFsIGJpc29nbm8gZHVyYW50ZSBs4oCZaW50ZXJvIFNwcmludC4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCBQcm9kdWN0IE93bmVyIHB1w7IgYWl1dGFyZSBhIGNoaWFyaXJlIGdsaSBlbGVtZW50aSBzZWxlemlvbmF0aSBkYWwgUHJvZHVjdCBCYWNrbG9nIGUgZmFyZSBkZWkgY29tcHJvbWVzc2kuIFNlIGlsIFRlYW0gZGkgU3ZpbHVwcG8gZGV0ZXJtaW5hIGNoZSBj4oCZw6ggdHJvcHBvIG8gdHJvcHBvIHBvY28gbGF2b3JvLCBwdcOyIHJpbmVnb3ppYXJlIGdsaSBlbGVtZW50aSBkZWxsbyBTcHJpbnQgQmFja2xvZyBjb24gaWwgUHJvZHVjdCBPd25lci4gSWwgVGVhbSBkaSBTdmlsdXBwbyBwdcOyIGFuY2hlIGludml0YXJlIGFsdHJlIHBlcnNvbmUgYSBwYXJ0ZWNpcGFyZSBhbCBtZWV0aW5nIGFmZmluY2jDqSBmb3JuaXNjYW5vIHVuYSBjb25zdWxlbnphIHRlY25pY2EgbyBkaSBkb21pbmlvLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlByaW1hIGRlbGxhIGZpbmUgZGVsbG8gU3ByaW50IFBsYW5uaW5nLCBpbCBUZWFtIGRpIFN2aWx1cHBvIGRvdnJlYmJlIGVzc2VyZSBpbiBncmFkbyBkaSBzcGllZ2FyZSBhbCBQcm9kdWN0IE93bmVyIGUgYWxsbyBTY3J1bSBNYXN0ZXIgY29tZSBpbnRlbmRlIGxhdm9yYXJlIGluIHF1YW50byB0ZWFtIGF1dG8tb3JnYW5penphdG8sIGFsIGZpbmUgZGkgcmFnZ2l1bmdlcmUgbOKAmU9iaWV0dGl2byBkaSBTcHJpbnQgZSBjcmVhcmUgbOKAmUluY3JlbWVudG8gcHJldmlzdG8uIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoibG8tc3ByaW50LWdvYWwifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNsby1zcHJpbnQtZ29hbCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBMbyBTcHJpbnQgR29hbCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkxvIFNwcmludCBHb2FsIMOoIHVuIG9iaWV0dGl2byBzdGFiaWxpdG8gcGVyIGxvIFNwcmludCBjaGUgcHXDsiBlc3NlcmUgcmFnZ2l1bnRvIGF0dHJhdmVyc28gbCdpbXBsZS0gbWVudGF6aW9uZSBkZWwgUHJvZHVjdCBCYWNrbG9nLiBFc3NvIGZvcm5pc2NlIHVuYSBndWlkYSBhbCBUZWFtIGRpIFN2aWx1cHBvIHN1bCBwZXJjaMOpIHN0aWEgY29zLSB0cnVlbmRvIGwnSW5jcmVtZW50by4gRXNzbyB2aWVuZSBjcmVhdG8gZHVyYW50ZSBpbCBtZWV0aW5nIGRpIFNwcmludCBQbGFubmluZy4gTG8gU3ByaW50IEdvYWwgb2YtIGZyZSBhbCBUZWFtIGRpIFN2aWx1cHBvIHVuIGNlcnRvIGdyYWRvIGRpIGZsZXNzaWJpbGl0w6AgaW4gcmFwcG9ydG8gYWxsYSBmdW56aW9uYWxpdMOgIGltcGxlbWVudGF0YSBuZWxs4oCZYW1iaXRvIGRlbGxvIFNwcmludC4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJHbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBzZWxlemlvbmF0aSBjb25zZWduYW5vIHVuYSBmdW56aW9uYWxpdMOgIGNvZXJlbnRlLCBjaGUgcHXDsiBlc3NlcmUgbG8gU3ByaW50IEdvYWwuIExvIFNwcmludCBHb2FsIHB1w7IgZXNzZXJlIHF1YWx1bnF1ZSBhbHRybyB0aXBvIGRpIGNvLSBlcmVuemEgY2hlIGZhY2NpYSBzw6wgY2hlIGlsIFRlYW0gZGkgU3ZpbHVwcG8gbGF2b3JpIGluc2llbWUgcGl1dHRvc3RvIGNoZSBzZWNvbmRvIGluaXppYXRpdmUgaW5kaS0gdmlkdWFsaS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCBUZWFtIGRpIFN2aWx1cHBvIGxhdm9yYSB0ZW5lbmRvIHNlbXByZSBpbiBtZW50ZSBsbyBTcHJpbnQgR29hbC4gUGVyIHNvZGRpc2ZhcmUgdGFsZSBvYmlldHRpdm8sIGVzc28gaW1wbGVtZW50YSBsJ2luc2llbWUgZGVsbGUgZnVuemlvbmFsaXTDoCBlIGRlbGxlIHRlY25vbG9naWUgbmVjZXNzYXJpZS4gU2UgaWwgbGF2b3JvIHJpc3VsdGEgZXMtIHNlcmUgZGl2ZXJzbyBkYSBxdWVsbG8gY2hlIGlsIFRlYW0gZGkgU3ZpbHVwcG8gc2kgYXNwZXR0YXZhLCBpbCBUZWFtIGNvbGxhYm9yYSBjb24gaWwgUHJvZHVjdCBPd25lciBwZXIgbmVnb3ppYXJlIGxhIHBvcnRhdGEgZGVsbG8gU3ByaW50IEJhY2tsb2cgYWxsJ2ludGVybm8gZGVsbG8gU3ByaW50LiIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6ImRhaWx5LXNjcnVtIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZGFpbHktc2NydW0ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgRGFpbHkgU2NydW0iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCBEYWlseSBTY3J1bSDDqCB1biBldmVudG8gbGltaXRhdG8gdGVtcG9yYWxtZW50ZSAodGltZS1ib3hlZCkgYSAxNSBtaW51dGkgY2hlIHNlcnZlIGFsIFRlYW0gZGkgU3ZpbHVwcG8uIElsIERhaWx5IFNjcnVtIHNpIHRpZW5lIG9nbmkgZ2lvcm5vIGRlbGxvIFNwcmludC4gSW4gZXNzbywgaWwgVGVhbSBkaSBTdmlsdXBwbyBwaWFuaWZpY2EgaWwgbGF2b3JvIHBlciBsZSBwcm9zc2ltZSAyNC4gQ2nDsiBvdHRpbWl6emEgbGEgY29sbGFib3JhemlvbmUgZSBsYSBwcmVzdGF6aW9uZVxuaXNwZXppb25hbmRvIGlsIGxhdm9ybyBzdm9sdG8gZGFsbOKAmXVsdGltbyBEYWlseSBTY3J1bSBlIHByZXZlZGVuZG8gaWwgbGF2b3JvIGluIGFycml2byBwZXIgaSBwcm9zc2ltaSBnaW9ybmkgZGVsbG8gU3ByaW50LiBJbCBEYWlseSBTY3J1bSBzaSBzdm9sZ2Ugb2duaSBnaW9ybm8gYWxsbyBzdGVzc28gb3JhcmlvIGUgbmVsbG8gc3Rlc3NvIGx1b2dvIHBlciByaWR1cnJlIGxhIGNvbXBsZXNzaXTDoC4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCBUZWFtIGRpIFN2aWx1cHBvIHV0aWxpenphIGlsIERhaWx5IFNjcnVtIHBlciBpc3BlemlvbmFyZSBsJ2F2YW56YW1lbnRvIHZlcnNvIGxvIFNwcmludCBHb2FsIGUgcGVyIGlzcGV6aW9uYXJlIGNvbWUgbOKAmWF2YW56YW1lbnRvIHN0aWEgdGVuZGVuZG8gdmVyc28gaWwgY29tcGxldGFtZW50byBkZWwgbGF2b3JvIGRlbGxvIFNwcmludCBCYWNrbG9nLiBJbCBEYWlseSBTY3J1bSBvdHRpbWl6emEgbGEgcHJvYmFiaWxpdMOgIGNoZSBpbCBUZWFtIGRpIFN2aWx1cHBvIHJhZ2dpdW5nYSBsbyBTcHJpbnQgR29hbC4gT2duaSBnaW9ybm8gaWwgVGVhbSBkaSBTdmlsdXBwbyBkb3ZyZWJiZSBjYXBpcmUgY29tZSBoYSBpbnRlbnppb25lIGRpIGxhdm9yYXJlIGluc2llbWUsIGNvbWUgdGVhbSBhdXRvLW9yZ2FuaXp6YXRvLCBwZXIgcmFnZ2l1bmdlcmUgbG8gU3ByaW50IEdvYWwgZSByZWFsaXp6YXJlIGzigJlJbmNyZW1lbnRvIGF0dGVzbyBlbnRybyBsYSBmaW5lIGRlbGxvIFNwcmludC4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMYSBzdHJ1dHR1cmEgZGVsIG1lZXRpbmcgw6ggZGVmaW5pdGEgZGFsIFRlYW0gZGkgU3ZpbHVwcG8gZSBwdcOyIGVzc2VyZSBjb25kb3R0YSBpbiB2YXJpIG1vZGkgcHVyY2jDqSBxdWVzdGkgdWx0aW1pIHNpYW5vIGZpbmFsaXp6YXRpIGFsbCdhdmFuemFtZW50byB2ZXJzbyBsbyBTcHJpbnQgR29hbC4gQWxjdW5pIFRlYW0gdXNhbm8gZG9tYW5kZSwgYWx0cmkgc2kgYmFzYW5vIG1hZ2dpb3JtZW50ZSBzdSBkaXNjdXNzaW9uaS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJRdWkgYyfDqCB1biBlc2VtcGlvIGRpIGNvc2Egc2kgcG90cmViYmUgdXNhcmU6IildKSxfdm0uX3YoIiAiKSxfYygnb2wnLFtfYygnbGknLFtfdm0uX3YoIkNvc2EgaG8gZmF0dG8gaWVyaSBjaGUgaGEgYWl1dGF0byBpbCBUZWFtIGRpIFN2aWx1cHBvIGEgcHJvY2VkZXJlIHZlcnNvIGxvIFNwcmludCBHb2FsPyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJDb3NhIGZhcsOyIG9nZ2kgcGVyIGFpdXRhcmUgaWwgVGVhbSBkaSBTdmlsdXBwbyBhIHByb2NlZGVyZSB2ZXJzbyBsbyBTcHJpbnQgR29hbD8iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiVmVkbyBkZWdsaSBvc3RhY29saSBjaGUgaW1wZWRpc2Nvbm8gbWUgbyBpbCBUZWFtIGRpIFN2aWx1cHBvIGRpIHByb2NlZGVyZSB2ZXJzbyBsbyBTcHJpbmcgR29hbD8iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklsIFRlYW0gZGkgU3ZpbHVwcG8gZSBsZSBhbHRyZSBwZXJzb25lIHPigJlpbmNvbnRyYW5vIHNwZXNzbyBzdWJpdG8gZG9wbyBpbCBEYWlseSBTY3J1bSBwZXIgZGlzY3V0ZXJlIGkgZGV0dGFnbGksIGFkYXR0YXJlIG8gcmktcGlhbmlmaWNhcmUgaWwgcmVzdG8gZGVsIGxhdm9ybyBkZWxsbyBTcHJpbnQuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiTG8gU2NydW0gTWFzdGVyIGFzc2ljdXJhIGNoZSBpbCBUZWFtIGRpIFN2aWx1cHBvIHRlbmdhIGxhIHJpdW5pb25lIG1hIGlsIFRlYW0gZGkgU3ZpbHVwcG8gw6ggcmVzcG9uc2FiaWxlIGRlbGxhIGNvbmR1emlvbmUgZGVsIERhaWx5IFNjcnVtLiBMbyBTY3J1bSBNYXN0ZXIgaW5zZWduYSBhbCBUZWFtIGRpIFN2aWx1cHBvIGEgbWFudGVuZXJlIGlsIERhaWx5IFNjcnVtIGVudHJvIGlsIHRlbXBvIGxpbWl0ZSAodGltZS1ib3gpIGRpIDE1IG1pbnV0aS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCBEYWlseSBTY3J1bSDDqCB1biBtZWV0aW5nIGludGVybm8gYWwgVGVhbSBkaSBTdmlsdXBwby4gbG8gU2NydW0gTWFzdGVyIHNpIGFzc2ljdXJhLCBuZWwgY2FzbyBzaWFubyBwcmVzZW50aSBhbHRyZSBwZXJzb25lLCBjaGUgcXVlc3RlIHVsdGltZSBub24gZGlzdHVyYmlubyBpbCBtZWV0aW5nLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklsIERhaWx5IFNjcnVtIG1pZ2xpb3JhIGxhIGNvbXVuaWNhemlvbmUsIGVsaW1pbmEgYWx0cmkgaW5jb250cmksIGlkZW50aWZpY2EgZ2xpIG9zdGFjb2xpIGFsbG8gc3ZpbHVwcG8gYWxsbyBzY29wbyBkaSByaW11b3ZlcmxpLCBldmlkZW56aWEgZSBwcm9tdW92ZSBpbCByYXBpZG8gcHJvY2Vzc28gZGVjaXNpb25hbGUgZSBtaWdsaW9yYSBpbCBsaXZlbGxvIGRpIGNvbm9zY2VuemEgZGVsIFRlYW0gZGkgU3ZpbHVwcG8uIEVzc28gcmFwcHJlc2VudGEgdW4gaW5jb250cm8gY2hpYXZlIGTigJlpc3BlemlvbmUgZSBhZGF0dGFtZW50by4iKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJzcHJpbnQtcmV2aWV3In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjc3ByaW50LXJldmlldyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTcHJpbnQgUmV2aWV3IildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiQWxsYSBmaW5lIGRlbGxvIFNwcmludCBzaSB0aWVuZSBsbyBTcHJpbnQgUmV2aWV3IHBlciBpc3BlemlvbmFyZSBs4oCZSW5jcmVtZW50byBlIGFkYXR0YXJlLCBzZSBuZWNlc3NhcmlvLCBpbCBQcm9kdWN0IEJhY2tsb2cuIER1cmFudGUgbG8gU3ByaW50IFJldmlldyBsbyBTY3J1bSBUZWFtIGVkIGkgcG9ydGF0b3JpIGRpIGludGVyZXNzZSBjb2xsYWJvcmFubyBzdSBjacOyIGNoZSDDqCBzdGF0byBmYXR0byBkdXJhbnRlIGxvIFNwcmludC4gQSBwYXJ0aXJlIGRhIHF1ZXN0byBlIGRhaSBjYW1iaWFtZW50aSBhcHBvcnRhdGkgYWwgUHJvZHVjdCBCYWNrbG9nIGR1cmFudGUgbG8gU3ByaW50LCBpIHBhcnRlY2lwYW50aSBjb2xsYWJvcmFubyBhbGxlIHByb3NzaW1lIGNvc2UgY2hlIHBvdHJlYmJlcm8gZXNzZXJlIGZhdHRlIHBlciBvdHRpbWl6emFyZSBpbCB2YWxvcmUuIFNpIHRyYXR0YSBkaSB1biBpbmNvbnRybyBpbmZvcm1hbGUgZSBsYSBwcmVzZW50YXppb25lIGRlbGzigJlJbmNyZW1lbnRvIGhhIGxvIHNjb3BvIGRpIHN1c2NpdGFyZSBjb21tZW50aSBlIHByb211b3ZlcmUgbGEgY29sbGFib3JhemlvbmUuXG5Fc3NvIMOoIHVuIGluY29udHJvIGRlbGxhIGR1cmF0YSBtYXNzaW1hIGRpIHF1YXR0cm8gb3JlIHBlciB1bm8gU3ByaW50IGRpIHVuIG1lc2UuIFBlciBTcHJpbnQgcGnDuSBicmV2aSwgbOKAmWV2ZW50byDDqCBkaSBzb2xpdG8gcGnDuSBicmV2ZS4gTG8gU2NydW0gTWFzdGVyIHNpIGFzc2ljdXJhIGNoZSBsJ2V2ZW50byBhYmJpYSBsdW9nbyBlIGNoZSBpIHBhcnRlY2lwYW50aSBuZSBjb21wcmVuZGFubyBsYSBmaW5hbGl0w6AuIExvIFNjcnVtIE1hc3RlciBpbnNlZ25hLCBhIHR1dHRlIGxlIHBlcnNvbmUgY29pbnZvbHRlLCBjb21lIG1hbnRlbmVybG8gbmVsIHRlbXBvIGxpbWl0ZSAodGltZS1ib3gpLiIpXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6ImxhLXNwcmludC1yZXZpZXctaW5jbHVkZS1pLXNlZ3VlbnRpLWVsZW1lbnRpIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjbGEtc3ByaW50LXJldmlldy1pbmNsdWRlLWktc2VndWVudGktZWxlbWVudGkifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgTGEgU3ByaW50IFJldmlldyBpbmNsdWRlIGkgc2VndWVudGkgZWxlbWVudGk6IildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdlbScsW192bS5fdigiMS4gSSBwYXJ0ZWNpcGFudGkgc29ubyBsbyBTY3J1bSBUZWFtIGUgaSBwcmluY2lwYWxpIHBvcnRhdG9yaSBkaSBpbnRlcmVzc2UgaW52aXRhdGkgZGFsIFByb2R1Y3QgT3duZXI7IildKV0pLF92bS5fdigiICIpLF9jKCdvbCcsW19jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJJbCBQcm9kdWN0IE93bmVyIHNwaWVnYSBxdWFsaSBlbGVtZW50aSBkZWwgUHJvZHVjdCBCYWNrbG9nIHNvbm8gc3RhdGkgXCJGYXR0aVwiIGUgcXVhbGkgbm9uIHNvbm8gc3RhdGkgXCJGYXR0aVwiOyIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygncCcsW192bS5fdigiSWwgVGVhbSBkaSBTdmlsdXBwbyBkaXNjdXRlIHN1IGNvc2Egw6ggYW5kYXRvIGJlbmUgZHVyYW50ZSBsbyBTcHJpbnQsIHF1YWxpIHByb2JsZW1pIHNpIHNvbm8gaW5jb250cmF0aSBlIGNvbWUgcXVlc3RpIHByb2JsZW1pIHNvbm8gc3RhdGkgcmlzb2x0aTsiKV0pXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ3AnLFtfdm0uX3YoIklsIFRlYW0gZGkgU3ZpbHVwcG8gbW9zdHJhIGlsIGxhdm9ybyBjaGUgaGEg4oCcRmF0dG/igJ0gZSByaXNwb25kZSBhbGxlIGRvbWFuZGUgcmVsYXRpdmUgYWxs4oCZSW4tIGNyZW1lbnRvOyIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygncCcsW192bS5fdigiSWwgUHJvZHVjdCBPd25lciBkaXNjdXRlIGxvIHN0YXRvIGF0dHVhbGUgZGVsIFByb2R1Y3QgQmFja2xvZy4gRmEgdW5hIHByZXZpc2lvbmUgZGVsbGUgcG9zc2ktIGJpbGkgZGF0ZSBvYmlldHRpdm8gZSBkaSBjb25zZWduYSBpbiBiYXNlIGFsbGEgbWlzdXJhIGRlbGzigJlhdmFuemFtZW50byBhdHR1YWxlIChzZSBuZWNlc3NhLSByaW8pOyIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygncCcsW192bS5fdigiTOKAmWludGVybyBncnVwcG8gY29sbGFib3JhIHN1IGNvc2EgZmFyZSBkb3BvLCBjb3PDrCBsYSBTcHJpbnQgUmV2aWV3IGZvcm5pc2NlIHVuIHByZXppb3NvIGNvbi0gdHJpYnV0byBhbGxlIHN1Y2Nlc3NpdmUgZGkgYWkgc3VjY2Vzc2l2aSBTcHJpbnQgUGxhbm5pbmcuIildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJQYXNzYXJlIGluIHJhc3NlZ25hIGNvbWUgaWwgbWVyY2F0byBvIGlsIHBvdGVuemlhbGUgdXRpbGl6em8gZGVsIHByb2RvdHRvIHBvc3NhIGF2ZXJlIGNhbWJpLSBhdG8gbGEgY29zYSBkaSBtYWdnaW9yIHZhbG9yZSBkYSBpbXBsZW1lbnRhcmUgcHJvc3NpbWFtZW50ZTsiKV0pXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ3AnLFtfdm0uX3YoIlBhc3NhcmUgaW4gcmFzc2VnbmEgbGEgdGltZWxpbmUsIGlsIGJ1ZGdldCwgbGUgZnVuemlvbmFsaXTDoCBwb3RlbnppYWxpIGUgaWwgbWVyY2F0byBwZXIgaSBwcm9zc2ltaSBwcmV2aXN0aSByaWxhc2NpIGRpIGZ1bnppb25hbGl0w6AgbyBkaSBjYXBhY2l0w6AgZGVsIHByb2RvdHRvLiIpXSldKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCByaXN1bHRhdG8gZGVsbG8gU3ByaW50IFJldmlldyDDqCB1biBQcm9kdWN0IEJhY2tsb2cgcmV2aXNpb25hdG8gY2hlIGRlZmluaXNjZSBnbGkgZWxlbWVudGkgZGVsXG5Qcm9kdWN0IEJhY2tsb2cgcHJvYmFiaWxtZW50ZSBzZWxlemlvbmF0aSBwZXIgaWwgcHJvc3NpbW8gU3ByaW50LiBJbCBQcm9kdWN0IEJhY2tsb2cgcHXDsiBhbmNoZVxuZXNzZXJlIGFkYXR0YXRvIGdsb2JhbG1lbnRlIHBlciB2ZW5pcmUgaW5jb250cm8gYSBudW92ZSBvcHBvcnR1bml0w6AuIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoic3ByaW50LXJldHJvc3BlY3RpdmUifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzcHJpbnQtcmV0cm9zcGVjdGl2ZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTcHJpbnQgUmV0cm9zcGVjdGl2ZSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkxhIFNwcmludCBSZXRyb3NwZWN0aXZlIMOoIHVu4oCZb2NjYXNpb25lIHBlciBsbyBTY3J1bSBUZWFtIHBlciBpc3BlemlvbmFyZSBzZSBzdGVzc28gZSBjcmVhcmUgdW4gcGlhbm8gZGkgbWlnbGlvcmFtZW50byBkYSBhdHR1YXJlIGR1cmFudGUgaWwgcHJvc3NpbW8gU3ByaW50LiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkxhIFNwcmludCBSZXRyb3NwZWN0aXZlIHNpIHRpZW5lIGRvcG8gbGEgU3ByaW50IFJldmlldyBlIHByaW1hIGRlbCBzdWNjZXNzaXZvIFNwcmludCBQbGFubmluZy4gTGEgU3ByaW50IFJldHJvc3BlY3RpdmUgw6ggdW5hIHJpdW5pb25lIGRlbGxhIGR1cmF0YSBtYXNzaW1hIGRpIHRyZSBvcmUgcGVyIHVubyBTcHJpbnQgZGkgdW4gbWVzZS4gUGVyIFNwcmludCBwacO5IGJyZXZpLCBs4oCZZXZlbnRvIMOoIGRpIHNvbGl0byBwacO5IGJyZXZlLiBMbyBTY3J1bSBNYXN0ZXIgc2kgYXNzaWN1cmEgY2hlIGwnZXZlbnRvIGFiYmlhIGx1b2dvIGUgY2hlIGkgcGFydGVjaXBhbnRpIG5lIGNvbXByZW5kYW5vIGxhIGZpbmFsaXTDoC4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMbyBTY3J1bSBNYXN0ZXIgc2kgYXNzaWN1cmEgY2hlIGlsIG1lZXRpbmcgc2lhIHBvc2l0aXZvIGUgcHJvZHV0dGl2by4gTG8gU2NydW0gTWFzdGVyIGluc2VnbmEgY29tZSBtYW50ZW5lcmxvIG5lbCB0ZW1wbyBsaW1pdGUgKHRpbWUtYm94KS4gTG8gU2NydW0gTWFzdGVyIHBhcnRlY2lwYSBhbCBtZWV0aW5nIGNvbWUgZWxlbWVudG8gcGFyaXRldGljbyBkZWwgdGVhbSBpbiByZWxhemlvbmUgYWxsYSBzdWEgcmVzcG9uc2FiaWxpdMOgIHN1bCBwcm9jZXNzbyBkaSBTY3J1bS4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJsby1zY29wby1kZWxsYS1zcHJpbnQtcmV0cm9zcGVjdGl2ZS1lLWRpIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjbG8tc2NvcG8tZGVsbGEtc3ByaW50LXJldHJvc3BlY3RpdmUtZS1kaSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBMbyBzY29wbyBkZWxsYSBTcHJpbnQgUmV0cm9zcGVjdGl2ZSDDqCBkaToiKV0pLF92bS5fdigiICIpLF9jKCdvbCcsW19jKCdsaScsW192bS5fdigiSXNwZXppb25hcmUgY29tZSBs4oCZdWx0aW1vIFNwcmludCDDqCBhbmRhdG8gaW4gbWVyaXRvIGEgcGVyc29uZSwgcmVsYXppb25pLCBwcm9jZXNzaSBlIHN0cnVtZW50aTsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiSWRlbnRpZmljYXJlIGUgb3JkaW5hcmUgZ2xpIGVsZW1lbnRpIHByaW5jaXBhbGkgY2hlIHNvbm8gYW5kYXRpIGJlbmUgZSBsZSBtaWdsaW9yaWUgcG90ZW56aWFsaTsiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiQ3JlYXJlIHVuIHBpYW5vIHBlciBhdHR1YXJlIGkgbWlnbGlvcmFtZW50aSBhbCBtb2RvIGRpIGxhdm9yYXJlIGRlbGxvIFNjcnVtIFRlYW0uIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMbyBTY3J1bSBNYXN0ZXIgaW5jb3JhZ2dpYSBsbyBTY3J1bSBUZWFtIGEgbWlnbGlvcmFyZSwgYWxs4oCZaW50ZXJubyBkZWwgZnJhbWV3b3JrIGRpIHByb2Nlc3NvIFNjcnVtLCBpbCBwcm9wcmlvIHByb2Nlc3NvIGRpIHN2aWx1cHBvIGUgbGUgcHJhdGljaGUgcGVyIHJlbmRlcmxvIHBpw7kgZWZmaWNhY2UgZSBncmFkZXZvbGUgcGVyIGlsIHByb3NzaW1vIFNwcmludC4gRHVyYW50ZSBvZ25pIFNwcmludCBSZXRyb3NwZWN0aXZlLCBsbyBTY3J1bSBUZWFtIHBpYW5pZmljYSBpIG1vZGkgcGVyIGF1bWVudGFyZSBsYSBxdWFsaXTDoCBkZWwgcHJvZG90dG8gbWlnbGlvcmFuZG8gaSBwcm9jZXNzaSBkaSBsYXZvcm8gbyBhZGF0dGFuZG8gbGEgZGVmaW5pemlvbmUgZGkg4oCcRmF0dG/igJ0sIHNlIG9wcG9ydHVubyBlIG5vbiBpbiBjb25mbGl0dG8gY29uIGdsaSBzdGFuZGFyZCBkaSBwcm9kb3R0byBvIG9yZ2FuaXp6YXRpdmkuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiRW50cm8gbGEgZmluZSBkZWxsYSBTcHJpbnQgUmV0cm9zcGVjdGl2ZSwgbG8gU2NydW0gVGVhbSBkb3ZyZWJiZSBhdmVyIGluZGl2aWR1YXRvIGkgbWlnbGlvcmEtIG1lbnRpIGNoZSBpbXBsZW1lbnRlcsOgIG5lbCBwcm9zc2ltbyBTcHJpbnQuIEF0dHVhcmUgdGFsaSBtaWdsaW9yYW1lbnRpIGR1cmFudGUgaWwgcHJvc3NpbW8gU3ByaW50IMOoIGzigJlhZGF0dGFtZW50byBhbGzigJlpc3BlemlvbmUgZGVsbG8gU2NydW0gVGVhbSBzdGVzc28uIEFuY2hlIHNlIGkgbWlnbGlvcmFtZW50aSBwb3Nzb25vIGVzc2VyZSBpbXBsZW1lbnRhdGkgaW4gb2duaSBtb21lbnRvLCBsYSBTcHJpbnQgUmV0cm9zcGVjdGl2ZSBmb3JuaXNjZSB1bmEgb3Bwb3J0dW5pdMOgIGZvcm1hbGUgcGVyIGZvY2FsaXp6YXJlIGzigJlpc3BlemlvbmUgZSBs4oCZYWRhdHRhbWVudG8uIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiZ2xpLWFydGVmYXR0aS1kaS1zY3J1bSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2dsaS1hcnRlZmF0dGktZGktc2NydW0ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgR2xpIEFydGVmYXR0aSBkaSBTY3J1bSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkdsaSBhcnRlZmF0dGkgZGkgU2NydW0gcmFwcHJlc2VudGFubyBpbCBsYXZvcm8gZSBpbCB2YWxvcmUgYWwgZmluZSBkaSBmb3JuaXJlIHRyYXNwYXJlbnphIGUgb3Bwb3J0dW5pdMOgIGRpIGlzcGV6aW9uZSBlIGFkYXR0YW1lbnRvLiBHbGkgYXJ0ZWZhdHRpIGRlZmluaXRpIGRhIFNjcnVtIHNvbm8gc3BlY2lmaWNhdGFtZW50ZSBwcm9nZXR0YXRpIHBlciBtYXNzaW1penphcmUgbGEgdHJhc3BhcmVuemEgZGVsbGUgaW5mb3JtYXppb25pIGNoaWF2ZSwgZGkgbW9kbyBjaGUgb2dudW5vIGFiYmlhIGxhIHN0ZXNzYSBjb21wcmVuc2lvbmUgZGVsbOKAmWFydGVmYXR0by4iKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJwcm9kdWN0LWJhY2tsb2cifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNwcm9kdWN0LWJhY2tsb2cifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgUHJvZHVjdCBCYWNrbG9nIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSWwgUHJvZHVjdCBCYWNrbG9nIMOoIHVuIGVsZW5jbyBvcmRpbmF0byBkaSB0dXR0byBjacOyIGNoZSDDqCBub3RvIGVzc2VyZSBuZWNlc3NhcmlvIGFsIHByb2RvdHRvLiBFc3NvIMOoIGzigJl1bmljYSBmb250ZSBkaSByZXF1aXNpdGkgcGVyIGxlIG1vZGlmaWNoZSBkYSBhcHBvcnRhcmUgYWwgcHJvZG90dG8uIElsIFByb2R1Y3QgT3duZXIgw6ggaWwgcmVzcG9uc2FiaWxlIGRlbCBQcm9kdWN0IEJhY2tsb2csIGNvbXByZXNvIGlsIHN1byBjb250ZW51dG8sIGxhIHN1YSBkaXNwb25pYmlsaXTDoCBlIGzigJlvcmRpbmEtIG1lbnRvIGRlaSBzdW9pIGVsZW1lbnRpLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlVuIFByb2R1Y3QgQmFja2xvZyBub24gw6ggbWFpIGNvbXBsZXRvLiBMYSBzdWEgcHJpbWEgc3Rlc3VyYSBkZWZpbmlzY2UgaSByZXF1aXNpdGkgaW5pemlhbG1lbnRlIGNvbm9zY2l1dGkgZSBtZWdsaW8gY29tcHJlc2kuIElsIFByb2R1Y3QgQmFja2xvZyBldm9sdmUgY29zw6wgY29tZSBldm9sdm9ubyBpbCBwcm9kb3R0byBlIGzigJlhbWJpLSBlbnRlIHN0ZXNzbyBuZWwgcXVhbGUgc2Fyw6AgdXRpbGl6emF0by4gSWwgUHJvZHVjdCBCYWNrbG9nIMOoIGRpbmFtaWNvIGUgY2FtYmlhIGNvbnRpbnVhbWVudGUgcGVyIGlkZW50aWZpY2FyZSBjacOyIGNoZSBzZXJ2ZSBhbCBwcm9kb3R0byBwZXIgZXNzZXJlIGFwcHJvcHJpYXRvLCBjb21wZXRpdGl2byBlIHV0aWxlLiBTZSBlc2lzdGUgdW4gcHJvZG90dG8gZXNpc3RlIGFuY2hlIGlsIHN1byBQcm9kdWN0IEJhY2tsb2cuXG5JbCBQcm9kdWN0IEJhY2tsb2cgZWxlbmNhIHR1dHRlIGxlIGNhcmF0dGVyaXN0aWNoZSwgbGUgZnVuemlvbmksIGkgcmVxdWlzaXRpLCBsZSBtaWdsaW9yaWUgZSBsZSBjb3JyZXppb25pIGNoZSBjb3N0aXR1aXNjb25vIGxlIG1vZGlmaWNoZSBkYSBhcHBvcnRhcmUgYWwgcHJvZG90dG8gbmVpIGZ1dHVyaSByaWxhc2NpLiBJIHN1b2kgZWxlbWVudGkgaGFubm8gaSBzZWd1ZW50aSBhdHRyaWJ1dGk6IGRlc2NyaXppb25lLCBvcmRpbmUsIHN0aW1hIGUgdmFsb3JlLiBHbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBzcGVzc28gaW5jbHVkb25vIGxlIGRlc2NyaXppb25pIGRlaSB0ZXN0IGNoZSBwcm92YW5vIGNoZSBnbGkgZWxlbWVudGkgc29ubyBcIkZhdHRpXCIuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSWwgUHJvZHVjdCBCYWNrbG9nIGRpdmVudGEgdW4gZWxlbmNvIHBpw7kgYW1waW8gZWQgZXNhdXN0aXZvIHF1YW5kbyB1biBwcm9kb3R0byDDqCB1c2F0byBlZCBhY3F1aXNpc2NlIHZhbG9yZSwgZSBxdWFuZG8gaWwgbWVyY2F0byBmb3JuaXNjZSBmZWVkYmFjay4gSSByZXF1aXNpdGkgbm9uIHNtZXR0b25vIG1haSBkaSBjYW1iaWFyZSBlIHBlcmNpw7IgaWwgUHJvZHVjdCBCYWNrbG9nIMOoIHVuIGFydGVmYXR0byB2aXZlbnRlLiBJIGNhbWJpYW1lbnRpIG5laSByZXF1aXNpdGkgZGkgYnVzaW5lc3MsIG5lbGxlIGNvbmRpemlvbmkgZGkgbWVyY2F0byBvIG5lbGxhIHRlY25vbG9naWEgcG9zc29ubyBjYXVzYXJlIGNhbWJpYW1lbnRpIGFsIFByb2R1Y3QgQmFja2xvZy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTcGVzc28gY2FwaXRhIGNoZSBwacO5IFNjcnVtIFRlYW0gbGF2b3Jhbm8gaW5zaWVtZSBzdWxsbyBzdGVzc28gcHJvZG90dG8uIFVuIHNpbmdvbG8gUHJvZHVjdCBCYWNrbG9nIMOoIHVzYXRvIHBlciBkZXNjcml2ZXJlIGlsIGxhdm9ybyBpbiBhcnJpdm8gZGEgc3ZvbGdlcmUgc3VsIHByb2RvdHRvLCBwb2kgcHXDsiBlc3NlcmUgdXNhdG8gdW4gYXR0cmlidXRvIGRlbCBQcm9kdWN0IEJhY2tsb2cgY2hlIHJhZ2dydXBwYSBnbGkgZWxlbWVudGkuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSWwgcmFmZmluYW1lbnRvIGRlbCBQcm9kdWN0IEJhY2tsb2cgw6ggbOKAmWF0dG8gZGkgYWdnaXVuZ2VyZSBkZXR0YWdsaSwgc3RpbWUgZSBvcmRpbmUgYWdsaSBlbGVtZW50aSBkZWwgUHJvZHVjdCBCYWNrbG9nLiBRdWVzdG8gw6ggdW4gcHJvY2Vzc28gY29udGludW8gaW4gY3VpIGlsIFByb2R1Y3QgT3duZXIgZSBpbCBUZWFtIGRpIFN2aWx1cHBvIGNvbGxhYm9yYW5vIHN1aSBkZXR0YWdsaSBkZWdsaSBlbGVtZW50aSBkZWwgUHJvZHVjdCBCYWNrbG9nLiBEdXJhbnRlIGlsIHJhZmZpbmFtZW50byBkZWwgUHJvZHVjdCBCYWNrbG9nLCBpIHN1b2kgZWxlbWVudGkgc29ubyByaWVzYW1pbmF0aSBlIHJpdmlzdGkuIExvIFNjcnVtIFRlYW0gZGVjaWRlIGNvbWUgZSBxdWFuZG8gaWwgcmFmZmluYW1lbnRvIMOoIGNvbXBsZXRhdG8uIElsIHJhZmZpbmFtZW50byBzb2xpdGFtZW50ZSBvY2N1cGEgbm9uIHBpw7kgZGVsIDEwJSBkZWxsYSBjYXBhY2l0w6AgZGVsIFRlYW0gZGkgU3ZpbHVwcG8uIFR1dHRhdmlhLCBnbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBwb3Nzb25vIGVzc2VyZSBhZ2dpb3JuYXRpIGluXG5xdWFsc2lhc2kgbW9tZW50byBkYWwgUHJvZHVjdCBPd25lciBvIGEgZGlzY3JlemlvbmUgZGVsIFByb2R1Y3QgT3duZXIuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiR2xpIGVsZW1lbnRpIG9yZGluYXRpIHBpw7kgaW4gYWx0byBzb25vIHNvbGl0YW1lbnRlIHBpw7kgY2hpYXJpIGUgbWVnbGlvIGRldHRhZ2xpYXRpIHJpc3BldHRvIGEgcXVlbGxpIHBpw7kgaW4gYmFzc28uIFN0aW1lIHBpw7kgcHJlY2lzZSBzb25vIGZhdHRlIHN1bGxhIGJhc2UgZGkgbWFnZ2lvcmkgY2hpYXJlenphIGUgZGV0dGFnbGlvOyBwacO5IGJhc3NvIMOoIGzigJlvcmRpbmUgZSBtaW5vcmUgw6ggaWwgZGV0dGFnbGlvLiBHbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBjaGUgaW1wZWduZXJhbm5vIGlsIFRlYW0gZGkgU3ZpbHVwcG8gbmVsbG8gU3ByaW50IGluIGFycml2byBzb25vIHJhZmZpbmF0aSBhbCBwdW50byBjaGUgcXVhbHVucXVlIGZyYSBkaSBlc3NpIHB1w7IgZXNzZXJlIOKAnEZhdHRv4oCdIGVudHJvIGlsIHRlbXBvIGxpbWl0ZSAodGltZS1ib3gpIGRlbGxvIFNwcmludC4gR2xpIGVsZW1lbnRpIGRlbCBQcm9kdWN0IEJhY2tsb2cgY2hlIHBvc3Nvbm8gZXNzZXJlIOKAnEZhdHRp4oCdIGRhbCBUZWFtIGRpIFN2aWx1cHBvIGFsbOKAmWludGVybm8gZGkgdW5vIFNwcmludCB2ZW5nb25vIGRpY2hpYXJhdGkg4oCcUHJvbnRp4oCdIHBlciBsYSBzZWxlemlvbmUgaW4gdW5vIFNwcmludCBQbGFubmluZy4gR2xpIGVsZW1lbnRpIGRlbCBQcm9kdWN0IEJhY2tsb2cgc29saXRhbWVudGUgYWNxdWlzaXNjb25vIHF1ZXN0byBsaXZlbGxvIGRpIHRyYXNwYXJlbnphIGF0dHJhdmVyc28gbGUgYXR0aXZpdMOgIGRpIHJhZmZpbmFtZW50byBzb3ByYSBkZXNjcml0dGUuXG7MgFxuSWwgVGVhbSBkaSBTdmlsdXBwbyDDqCByZXNwb25zYWJpbGUgZGkgdHV0dGUgbGUgc3RpbWUuIElsIFByb2R1Y3QgT3duZXIgcHXDsiBpbmZsdWVuemFyZSBpbCBUZWFtIGRpXG5TdmlsdXBwbyBhaXV0YW5kbyBhIGNhcGlyZSBlIHNlbGV6aW9uYXJlIGkgY29tcHJvbWVzc2kgbWEsIGNvbG9ybyBjaGUgZXNlZ3VpcmFubm8gaWwgbGF2b3JvIGVmZmV0dHVlcmFubm8gbGEgc3RpbWEgZmluYWxlLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6Im1vbml0b3JhcmUtbC1hdmFuemFtZW50by12ZXJzby1pLWdvYWwifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNtb25pdG9yYXJlLWwtYXZhbnphbWVudG8tdmVyc28taS1nb2FsIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIE1vbml0b3JhcmUgbOKAmWF2YW56YW1lbnRvIHZlcnNvIGkgR29hbCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklsIGxhdm9ybyB0b3RhbGUgcmltYW5lbnRlIHBlciByYWdnaXVuZ2VyZSB1biBvYmlldHRpdm8gcHXDsiBlc3NlcmUgY2FsY29sYXRvIGluIG9nbmkgbW9tZW50by4gSWwgUHJvZHVjdCBPd25lciB0aWVuZSB0cmFjY2lhIGRlbCBsYXZvcm8gdG90YWxlIHJpbWFuZW50ZSBhbG1lbm8gYWQgb2duaSBTcHJpbnQgUmV2aWV3LiBJbCBQcm9kdWN0IE93bmVyIGNvbmZyb250YSBxdWVzdGEgcXVhbnRpdMOgIGNvbiBpbCBsYXZvcm8gcmltYW5lbnRlIGFpIHByZWNlZGVudGkgU3ByaW50IFJldmlldywgYWwgZmluZSBkaSB2YWx1dGFyZSBsJ2F2YW56YW1lbnRvIHZlcnNvIGxhIGNvbmNsdXNpb25lIGRlbCBsYXZvcm8gc3RpbWF0byBpbiByYXBwb3J0byBhbGxhIHNjYWRlbnphXG5kZXNpZGVyYXRhIHBlciBsJ29iaWV0dGl2by4gVGFsZSBpbmZvcm1hemlvbmUgw6ggcmVzYSBpbiBtYW5pZXJhIHRyYXNwYXJlbnRlIGEgdHV0dGkgZ2xpIHN0YWtlaG9sZGVyLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlZhcmllIHByYXRpY2hlIHByb2lldHRpdmUgZGkgdGVuZGVuemEgc29ubyBzdGF0ZSB1dGlsaXp6YXRlIHBlciBwcmV2ZWRlcmUgbCdhdmFuemFtZW50bywgY29tZTogYnVybmRvd24sIGJ1cm51cCwgbyBjdW11bGF0aXZlIGZsb3cuIFRhbGkgcHJhdGljaGUgc2kgc29ubyByaXZlbGF0ZSB1dGlsaSwgc2VuemEgcGVyw7Igc29zdGl0dWlyc2kgYWxsJ2ltcG9ydGFuemEgZGVsbCdlbXBpcmlzbW8uIEluIGFtYmllbnRpIGNvbXBsZXNzaSBub24gw6ggZGF0byBjb25vc2NlcmUgcXVlbGxvIGNoZSBhY2NhZHLDoCwgc29sbyBjacOyIGNoZSDDqCBnacOgIGFjY2FkdXRvIHB1w7IgZXNzZXJlIHV0aWxpenphdG8gcGVyIHByZW5kZXJlIGRlY2lzaW9uaSBzdWwgZnV0dXJvLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6InNwcmludC1iYWNrbG9nIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjc3ByaW50LWJhY2tsb2cifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgU3ByaW50IEJhY2tsb2ciKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMbyBTcHJpbnQgQmFja2xvZyDDqCBsJ2luc2llbWUgZGVnbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBzZWxlemlvbmF0aSBwZXIgbG8gU3ByaW50LCBwacO5IHVuIHBpYW5vIHBlciBjb25zZWduYXJlIGwnSW5jcmVtZW50byBkZWwgcHJvZG90dG8gZSBwZXIgcmVhbGl6emFyZSBsbyBTcHJpbnQgR29hbC4gTG8gU3ByaW50IEJhY2tsb2cgw6ggdW5hIHByZXZpc2lvbmUgZmF0dGEgZGFsIFRlYW0gZGkgU3ZpbHVwcG8gcmlndWFyZG8gYSBxdWFsZSBmdW56aW9uYWxpdMOgIHNhcsOgIHByZXNlbnRlIG5lbCBwcm9zc2ltbyBJbmNyZW1lbnRvLCBlIHJpZ3VhcmRvIGFsIGxhdm9ybyBuZWNlc3NhcmlvIHBlciBjb25zZWduYXJlIHRhbGUgZnVuemlvbmFsaXTDoCBpbiB1biBJbmNyZW1lbnRvIOKAnEZhdHRv4oCdLlxuTG8gU3ByaW50IEJhY2tsb2cgcmVuZGUgdmlzaWJpbGUgdHV0dG8gaWwgbGF2b3JvIGNoZSBpbCBUZWFtIGRpIFN2aWx1cHBvIGlkZW50aWZpY2EgY29tZSBuZWNlc3NhcmlvIHBlciByYWdnaXVuZ2VyZSBsbyBTcHJpbnQgR29hbC4gUGVyIGFzc2ljdXJhcmUgdW4gbWlnbGlvcmFtZW50byBjb250aW51bywgZXNzbyBpbmNsdWRlIGFsbWVubyBpbCBtaWdsaW9yYW1lbnRvIGRpIHVuIHByb2Nlc3NvIGFkIGFsdGEgcHJpb3JpdMOgIGlkZW50aWZpY2F0byBuZWxsYSBwcmVjZWRlbnRlIGluY29udHJvIGRpIFJldHJvc3BlY3RpdmUuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiTG8gU3ByaW50IEJhY2tsb2cgw6ggdW4gcGlhbm8gY29uIGRldHRhZ2xpIHN1ZmZpY2llbnRpIGFmZmluY2jDqSBpIGNhbWJpYW1lbnRpIGluIGF0dG8gcG9zc2FubyBlc3NlcmUgY29tcHJlc2kgbmVsIERhaWx5IFNjcnVtLiBJbCBUZWFtIGRpIFN2aWx1cHBvIG1vZGlmaWNhIGxvIFNwcmludCBCYWNrbG9nIGR1cmFudGUgdHV0dG8gbG8gU3ByaW50IGUgbG8gU3ByaW50IEJhY2tsb2cgZW1lcmdlIGR1cmFudGUgbG8gU3ByaW50LiBDacOyIHNpIHZlcmlmaWNhIHF1YW5kbyBpbCBUZWFtIGRpIFN2aWx1cHBvIG9wZXJhIGF0dHJhdmVyc28gaWwgcGlhbm8gZWQgaW1wYXJhIHBpw7kgZGV0dGFnbGkgc3VsIGxhdm9ybyBuZWNlc3NhcmlvIGEgcmFnZ2l1bmdlcmUgbG8gU3ByaW50XG5Hb2FsLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlF1YW5kbyDDqCBuZWNlc3NhcmlvIGRlbCBudW92byBsYXZvcm8sIGlsIFRlYW0gZGkgU3ZpbHVwcG8gbG8gYWdnaXVuZ2UgYWxsbyBTcHJpbnQgQmFja2xvZy4gUXVhbmRvIGRlbCBsYXZvcm8gw6ggZXNlZ3VpdG8gbyBjb21wbGV0YXRvLCBpbCBsYXZvcm8gcmltYW5lbnRlIHN0aW1hdG8gw6ggYWdnaW9ybmF0by4gU2UgYWxjdW5pIGVsZW1lbnRpIGRlbCBwaWFubyBub24gc29ubyBwacO5IHJpdGVudXRpIHV0aWxpLCBzb25vIHJpbW9zc2kuIFNvbG8gaWwgVGVhbSBkaSBTdmlsdXBwbyBwdcOyIGNhbWJpYXJlIGlsIHN1byBTcHJpbnQgQmFja2xvZyBuZWwgY29yc28gZGkgdW5vIFNwcmludC4gTG8gU3ByaW50IEJhY2tsb2cgw6ggbCdpbW1hZ2luZSBpbiB0ZW1wbyByZWFsZSBlIGFsdGFtZW50ZSB2aXNpYmlsZSBkZWwgbGF2b3JvIGNoZSBpbCBUZWFtIGRpIFN2aWx1cHBvIHByZXZlZGUgZGkgY29tcGllcmUgZHVyYW50ZSBsbyBTcHJpbnQ7IMOoIGRpIGVzY2x1c2l2YSBhcHBhcnRlbmVuemEgZGVsIFRlYW0gZGkgU3ZpbHVwcG8uIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoibW9uaXRvcmFyZS1sLWF2YW56YW1lbnRvLWRlbGxvLXNwcmludCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI21vbml0b3JhcmUtbC1hdmFuemFtZW50by1kZWxsby1zcHJpbnQifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgTW9uaXRvcmFyZSBs4oCZYXZhbnphbWVudG8gZGVsbG8gU3ByaW50IildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSW4gcXVhbHNpYXNpIG1vbWVudG8gZHVyYW50ZSB1bm8gU3ByaW50LCBpbCBsYXZvcm8gdG90YWxlIHJpbWFuZW50ZSBuZWxsbyBTcHJpbnQgQmFja2xvZyBwdcOyIGVzc2VyZSBzb21tYXRvLiBJbCBUZWFtIGRpIFN2aWx1cHBvIHRpZW5lIHRyYWNjaWEgZGVsbGEgcXVhbnRpdMOgIGRpIHF1ZXN0byBsYXZvcm8gdG90YWxlIHJpbWFuZW50ZSBxdWFudG9tZW5vIGFkIG9nbmkgRGFpbHkgU2NydW0gZSBwcm9pZXR0YSBsYSBwcm9iYWJpbGl0w6AgZGkgcmFnZ2l1bmdlcmUgbG8gU3ByaW50IEdvYWwuIFRlbmVuZG8gdHJhY2NpYSBkZWwgbGF2b3JvIHJpbWFuZW50ZSBhdHRyYXZlcnNvIGxvIFNwcmludCwgaWwgVGVhbSBkaSBTdmlsdXBwbyDDqCBpbiBncmFkbyBkaSBnZXN0aXJlIGlsIHByb3ByaW8gYXZhbnphbWVudG8uIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiaW5jcmVtZW50byJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2luY3JlbWVudG8ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgSW5jcmVtZW50byIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkwnSW5jcmVtZW50byDDqCBsYSBzb21tYSBkaSB0dXR0aSBnbGkgZWxlbWVudGkgZGVsIFByb2R1Y3QgQmFja2xvZyBjb21wbGV0YXRpIGR1cmFudGUgdW5vIFNwcmludCBlIGRlbCB2YWxvcmUgZGVnbGkgaW5jcmVtZW50aSBkaSB0dXR0aSBnbGkgU3ByaW50IHByZWNlZGVudGkuIEFsbGEgZmluZSBkaSB1bm8gU3ByaW50LCBpbCBudW92byBJbmNyZW1lbnRvIGRldmUgcmlzdWx0YXJlIOKAnEZhdHRv4oCdLCBpbCBjaGUgc2lnbmlmaWNhIGNoZSBkZXZlIGVzc2VyZSB1dGlsaXp6YWJpbGUgZSBkZXZlIHNvZGRpc2ZhcmUgbGEgZGVmaW5pemlvbmUgZGkg4oCcRmF0dG/igJ0gZGF0YSBkYWxsbyBTY3J1bSBUZWFtLiBVbiBJbmNyZW1lbnRvIMOoIHVuIGluc2llbWUgZGkgbGF2b3JvIFwiRmF0dG9cIiBlZCBpc3BlemlvbmFiaWxlIGNoZSBzdXBwb3J0YSBsJ2VtcGlyaXNtbyBhbGxhIGZpbmUgZGVsbG8gU3ByaW50LiBMJ0luY3JlbWVudG8gw6ggdW4gcGFzc28gdmVyc28gbGEgdmlzaW9uZSBvIGzigJlvYmlldHRpdm8uIEwnSW5jcmVtZW50byBkZXZlIGVzc2VyZSB1dGlsaXp6YWJpbGUgaW5kaXBlbmRlbnRlbWVudGUgZGFsIGZhdHRvIGNoZSBpbCBQcm9kdWN0IE93bmVyIGRlY2lkYSBkaSByaWxhc2NpYXJsbyBkYXZ2ZXJvLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6InRyYXNwYXJlbnphLWRlZ2xpLWFydGVmYXR0aSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3RyYXNwYXJlbnphLWRlZ2xpLWFydGVmYXR0aSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBUcmFzcGFyZW56YSBkZWdsaSBhcnRlZmF0dGkiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTY3J1bSDDqCBmb25kYXRvIHN1bGxhIHRyYXNwYXJlbnphLiBMZSBkZWNpc2lvbmkgcGVyIG90dGltaXp6YXJlIGlsIHZhbG9yZSBlIGNvbnRyb2xsYXJlIGlsIHJpc2NoaW8gc29ubyBwcmVzZSBpbiBiYXNlIGFsbG8gc3RhdG8gcGVyY2VwaXRvIGRlZ2xpIGFydGVmYXR0aS4gTmVsbGEgbWlzdXJhIGluIGN1aSBsYSB0cmFzcGFyZW56YSDDqCBjb21wbGV0YSwgdGFsaSBkZWNpc2lvbmkgaGFubm8gdW5hIGJhc2Ugc29saWRhLiBOZWxsYSBtaXN1cmEgaW4gY3VpIGdsaSBhcnRlZmF0dGkgbm9uIHNpYW5vIGNvbXBsZXRhbWVudGUgdHJhc3BhcmVudGksIHRhbGkgZGVjaXNpb25pIHBvc3Nvbm8gZXNzZXJlIGltcGVyZmV0dGUsIGlsIHZhbG9yZSBwdcOyIGRpbWludWlyZSBlIGlsIHJpc2NoaW8gcHXDsiBhdW1lbnRhcmUuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiTG8gU2NydW0gTWFzdGVyIGRldmUgbGF2b3JhcmUgY29uIGlsIFByb2R1Y3QgT3duZXIsIGNvbiBpbCBUZWFtIGRpIHN2aWx1cHBvIGUgY29uIGxlIGFsdHJlIHBhcnRpIGNvaW52b2x0ZSBwZXIgY2FwaXJlIHNlIGdsaSBhcnRlZmF0dGkgc2lhbm8gY29tcGxldGFtZW50ZSB0cmFzcGFyZW50aS4gQ2kgc29ubyBwcmF0aWNoZSBwZXIgZ2VzdGlyZSBzaXR1YXppb25pIGluIGN1aSBsYSB0cmFzcGFyZW56YSBub24gc2lhIGNvbXBsZXRhOyBpbiB0YWxpIHNpdHVhemlvbmkgbG8gU2NydW0gTWFzdGVyIGRldmUgYWl1dGFyZSB0dXR0aSBhZCBhcHBsaWNhcmUgbGUgcHJhdGljaGUgcGnDuSBhcHByb3ByaWF0ZS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJVbm8gU2NydW0gTWFzdGVyIHB1w7IgcmlsZXZhcmUgY2hlIGxhIHRyYXNwYXJlbnphIHNpYSBpbmNvbXBsZXRhIGlzcGV6aW9uYW5kbyBnbGkgYXJ0ZWZhdHRpLCBwZXJjZXBlbmRvIGkgcGF0dGVybiwgYXNjb2x0YW5kbyBhdHRlbnRhbWVudGUgY2nDsiBjaGUgdmllbmUgZGV0dG8gZSByaWxldmFuZG8gbGUgZGlmZmVyZW56ZSB0cmEgaSByaXN1bHRhdGkgYXR0ZXNpIGUgcXVlbGxpIHJlYWxpLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkNvbXBpdG8gZGVsbG8gU2NydW0gTWFzdGVyIMOoIHF1ZWxsbyBkaSBsYXZvcmFyZSBjb24gaWwgVGVhbSBkaSBTY3J1bSBlIGNvbiBsJ29yZ2FuaXp6YXppb25lIHBlciBhdW1lbnRhcmUgbGEgdHJhc3BhcmVuemEgZGVnbGkgYXJ0ZWZhdHRpLiBRdWVzdG8gbGF2b3JvIGRpIHNvbGl0byBjb21wb3J0YSBsJ2FwcHJlbmRpbWVudG8sIGxhIHBlcnN1YXNpb25lIGVkIGlsIGNhbWJpYW1lbnRvLiBMYSB0cmFzcGFyZW56YSBub24gc2kgb3R0aWVuZSBkYSB1biBnaW9ybm8gYWxsJ2FsdHJvLCBtYSBwaXV0dG9zdG8gYXR0cmF2ZXJzbyB1biBwZXJjb3Jzby4iKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJkZWZpbml6aW9uZS1kaS1mYXR0byJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2RlZmluaXppb25lLWRpLWZhdHRvIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIERlZmluaXppb25lIGRpIOKAnEZhdHRv4oCdIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiUXVhbmRvIHVuIGVsZW1lbnRvIGRlbCBQcm9kdWN0IEJhY2tsb2cgbyB1biBJbmNyZW1lbnRvIMOoIGNvbnNpZGVyYXRvIOKAnEZhdHRv4oCdLCB0dXR0aSBkZXZvbm8gY2FwaXJlIGNvc2Egc2kgaW50ZW5kZSBwZXIg4oCcRmF0dG/igJ0uIFNlYmJlbmUgaWwgc2lnbmlmaWNhdG8gZGkg4oCcRmF0dG/igJ0gcG9zc2EgdmFyaWFyZSBpbiBtYW5pZXJhIHNpZ25pZmljYXRpdmEgZGEgU2NydW0gVGVhbSBhIFNjcnVtIFRlYW0sIGkgbWVtYnJpIGRldm9ubyBhdmVyZSB1bmEgY29tcHJlbnNpb25lIGNvbmRpdmlzYSBkaSBjacOyIGNoZSBzaSBpbnRlbmRlIHBlciBsYXZvcm8gY29tcGxldG8sIGFsIGZpbmUgZGkgZ2FyYW50aXJlIGxhIHRyYXNwYXJlbnphLiBRdWVzdGEgw6ggbGEgZGVmaW5pemlvbmUgZGkgXCJGYXR0b+KAnSBwZXIgbG8gU2NydW0gVGVhbSBlZCDDqCB1dGlsaXp6YXRhIHBlciB2YWx1dGFyZSBxdWFuZG8gaWwgbGF2b3JvIHN1bGzigJlJbmNyZW1lbnRvIGRpIHByb2RvdHRvIMOoIGNvbXBsZXRvLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkxhIHN0ZXNzYSBkZWZpbml6aW9uZSBndWlkYSBpbCBUZWFtIGRpIFN2aWx1cHBvIGEgY2FwaXJlIHF1YW50aSBlbGVtZW50aSBkZWwgUHJvZHVjdCBCYWNrbG9nIMOoIHBvc3NpYmlsZSBzZWxlemlvbmFyZSBkdXJhbnRlIGxvIFNwcmludCBQbGFubmluZy4gTG8gc2NvcG8gZGkgb2duaSBTcHJpbnQgw6ggZGkgY29uc2VnbmFyZSBpbmNyZW1lbnRpIGRpIGZ1bnppb25hbGl0w6AgcG90ZW56aWFsbWVudGUgcmlsYXNjaWFiaWxpIGNoZSBzb2RkaXNmYW5vIGxhIGRlZmluaXppb25lIGF0dHVhbGUgZGkg4oCcRmF0dG/igJ0gZGVsbG8gU2NydW0gVGVhbS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJIFRlYW0gZGkgU3ZpbHVwcG8gY29uc2VnbmFubyBhZCBvZ25pIFNwcmludCB1biBJbmNyZW1lbnRvIGRpIGZ1bnppb25hbGl0w6AgZGVsIHByb2RvdHRvLiBRdWVzdG8gSW5jcmVtZW50byDDqCB1dGlsaXp6YWJpbGUsIGNvc2ljY2jDqSB1biBQcm9kdWN0IE93bmVyIHB1w7Igc2NlZ2xpZXJlIHNlIHJpbGFzY2lhcmxvIGltbWVkaWF0YW1lbnRlLiBTZSBwZXIgdW4gaW5jcmVtZW50byBsYSBkZWZpbml6aW9uZSBkaSBcIkZhdHRvXCIgZmEgcGFydGUgZGkgY29udmVuemlvbmksIHN0YW5kYXJkIG8gbGluZWUgZ3VpZGEgZGVsbCdvcmdhbml6emF6aW9uZSBkZWxsbyBzdmlsdXBwbyB0dXR0aSBnbGkgU2NydW0gVGVhbSBkZXZvbm8gc2VndWlybGEgZGkgYmFzZSBhbG1lbm8gc2VndWlybGEuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiU2UgXCJGYXR0b1wiLCByZWxhdGl2YW1lbnRlIGFkIGluY3JlbWVudG8sIG5vbiDDqCB1bmEgY29udmVuemlvbmUgZGVsbCdvcmdhbml6emF6aW9uZSBkZWxsbyBzdmlsdXBwbywgaWwgVGVhbSBkaSBTdmlsdXBwbyBkZWxsbyBTY3J1bSBUZWFtIGRldmUgc3RhYmlsaXJlIHVuYSBkZWZpbml6aW9uZSBkaSBcIkZhdHRvXCIgYXBwcm8tIHByaWF0YSBwZXIgaWwgcHJvZG90dG8uIFNlIGNpIHNvbm8gbW9sdGVwbGljaSBTY3J1bSBUZWFtIGNoZSBsYXZvcmFubyBzdWwgc2lzdGVtYSBvIHN1bCByaWxhc2NpbyBkZWwgcHJvZG90dG8sIGkgVGVhbSBkaSBTdmlsdXBwbyBkaSB0dXR0aSBnbGkgU2NydW0gVGVhbSBkZXZvbm8gc3RhYmlsaXJlIHJlY2lwcm9jYW1lbnRlIGxhIGRlZmluaXppb25lIGRpIFwiRmF0dG9cIi4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJPZ25pIEluY3JlbWVudG8gw6ggYWRkaXRpdm8gYSB0dXR0aSBnbGkgaW5jcmVtZW50aSBwcmVjZWRlbnRpIGVkIMOoIHRlc3RhdG8sIGdhcmFudGVuZG8gY2hlIHR1dHRpIGdsaSBpbmNyZW1lbnRpIGxhdm9yYW5vIGluc2llbWUuXG5WaWEgdmlhIGNoZSBnbGkgU2NydW0gVGVhbSBtYXR1cmFubywgY2kgc2kgYXR0ZW5kZSBjaGUgbGEgbG9ybyBkZWZpbml6aW9uZSBkaSDigJxGYXR0b+KAnSBzaSBlc3BhbmRhIHBlciBpbmNsdWRlcmUgY3JpdGVyaSBwacO5IHN0cmluZ2VudGkgZmluYWxpenphdGkgYWQgdW5hIHF1YWxpdMOgIG1hZ2dpb3JlLiBOdW92ZSBkZWZpbml6aW9uaSwgY29zw6wgY29tZSBzb25vLCBwb3Nzb25vIHJpdmVsYXJlIGxhdm9ybyBkYSBmYXJlIG5laSBwcmVjZWRlbnRpIGluY3JlbWVudGkgXCJGYXR0aVwiLiBRdWFsc2lhc2kgcHJvZG90dG8gbyBzaXN0ZW1hIGRvdnJlYmJlIGF2ZXJlIHVuYSBkZWZpbml6aW9uZSBkaSBcIkZhdHRvXCIgY2hlIGZvc3NlIHVubyBzdGFuZGFyZCBwZXIgcXVhbHNpYXNpIGxhdm9ybyByZWFsaXp6YXRvIHN1IGRpIGVzc2kuIildKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InNjcnVtZm9vdGVyIn0sW19jKCdwJyxbX3ZtLl92KCLCqTIwMTcgS2VuIFNjaHdhYmVyIGFuZCBKZWZmIFN1dGhlcmxhbmQuIE9mZmVyZWQgZm9yIGxpY2Vuc2UgdW5kZXIgdGhlIEF0dHJpYnV0aW9uIFNoYXJlLUFsaWtlIGxpY2Vuc2Ugb2YgQ3JlYXRpdmUgQ29tbW9ucywgYWNjZXNzaWJsZSBhdCBodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS80LjAvbGVnYWxjb2RlIGFuZCBhbHNvIGRlc2NyaWJlZCBpbiBzdW1tYXJ5IGZvcm0gYXQgaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvNC4wLy4gQnkgdXRpbGl6aW5nIHRoaXMgU2NydW0gR3VpZGUsIHlvdSBhY2tub3dsZWRnZSBhbmQgYWdyZWUgdGhhdCB5b3UgaGF2ZSByZWFkIGFuZCBhZ3JlZSB0byBiZSBib3VuZCBieSB0aGUgdGVybXMgb2YgdGhlIEF0dHJpYnV0aW9uIFNoYXJlLUFsaWtlIGxpY2Vuc2Ugb2YgQ3JlYXRpdmUgQ29tbW9ucy4iKV0pXSldKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}